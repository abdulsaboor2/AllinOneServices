{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { PlatformColor } from \"react-native-web/dist/index\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\n\nvar DialogCodeInput = function DialogCodeInput(props) {\n  var style = props.style,\n      wrapperStyle = props.wrapperStyle,\n      digitContainerStyle = props.digitContainerStyle,\n      digitContainerFocusedStyle = props.digitContainerFocusedStyle,\n      digitStyle = props.digitStyle,\n      _props$codeLength = props.codeLength,\n      codeLength = _props$codeLength === void 0 ? 4 : _props$codeLength,\n      onCodeChange = props.onCodeChange,\n      nodeProps = __rest(props, [\"style\", \"wrapperStyle\", \"digitContainerStyle\", \"digitContainerFocusedStyle\", \"digitStyle\", \"codeLength\", \"onCodeChange\"]);\n\n  var _useTheme = useTheme(buildStyles),\n      styles = _useTheme.styles;\n\n  var codeRef = React.useRef(null);\n\n  var _React$useState = React.useState(props.autoFocus || false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      containerIsFocused = _React$useState2[0],\n      setContainerIsFocused = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      code = _React$useState4[0],\n      setCode = _React$useState4[1];\n\n  var codeDigitsArray = new Array(codeLength).fill(0);\n  var emptyInputChar = \" \";\n\n  var handleContainerPress = function handleContainerPress() {\n    var _a;\n\n    setContainerIsFocused(true);\n    (_a = codeRef === null || codeRef === void 0 ? void 0 : codeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  var onCodeChangePress = function onCodeChangePress(t) {\n    var _a;\n\n    setCode(t);\n    typeof onCodeChange === \"function\" && onCodeChange(t);\n\n    if (t.length === codeLength) {\n      setContainerIsFocused(false);\n      (_a = codeRef === null || codeRef === void 0 ? void 0 : codeRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n    }\n  };\n\n  var handleOnBlur = function handleOnBlur() {\n    return setContainerIsFocused(false);\n  };\n\n  var toDigitInput = function toDigitInput(_value, idx) {\n    var digit = code[idx] || emptyInputChar;\n    var isCurrentDigit = idx === code.length;\n    var isLastDigit = idx === codeLength - 1;\n    var isCodeFull = code.length === codeLength;\n    var isFocused = isCurrentDigit || isLastDigit && isCodeFull;\n    var containerStyle = containerIsFocused && isFocused ? [styles.inputContainer, digitContainerStyle, styles.inputContainerFocused, digitContainerFocusedStyle] : [styles.inputContainer, digitContainerStyle];\n    return React.createElement(View, {\n      key: idx,\n      style: containerStyle\n    }, React.createElement(Text, {\n      style: [styles.inputText, digitStyle]\n    }, digit));\n  };\n\n  return React.createElement(View, {\n    style: [styles.textInputWrapper, wrapperStyle]\n  }, React.createElement(Pressable, {\n    onPress: handleContainerPress,\n    style: [styles.codeContainer, style]\n  }, codeDigitsArray.map(toDigitInput)), React.createElement(TextInput, _extends({\n    ref: codeRef,\n    style: styles.hiddenInput,\n    keyboardType: \"number-pad\",\n    returnKeyType: \"done\",\n    textContentType: \"oneTimeCode\",\n    onSubmitEditing: handleOnBlur,\n    maxLength: codeLength,\n    onChangeText: onCodeChangePress\n  }, nodeProps)));\n};\n\nDialogCodeInput.propTypes = _extends(_extends({}, ViewPropTypes), {\n  wrapperStyle: ViewPropTypes.style,\n  digitContainerStyle: ViewPropTypes.style,\n  digitContainerFocusedStyle: ViewPropTypes.style,\n  digitStyle: ViewPropTypes.style,\n  codeLength: PropTypes.number,\n  onCodeChange: PropTypes.func,\n  style: Text.propTypes.style\n});\nDialogCodeInput.displayName = \"DialogCodeInput\";\n\nvar buildStyles = function buildStyles(isDark) {\n  return StyleSheet.create({\n    codeContainer: {\n      width: \"90%\",\n      flexDirection: \"row\",\n      alignSelf: \"center\",\n      justifyContent: \"space-between\",\n      marginBottom: 20\n    },\n    inputContainer: _extends({\n      flex: 1,\n      borderColor: PlatformColor(\"separator\"),\n      borderBottomWidth: 3,\n      paddingBottom: 5,\n      marginHorizontal: 5,\n      alignItems: \"center\"\n    }, Platform.select({\n      ios: {\n        borderColor: PlatformColor(\"separator\")\n      },\n      android: {\n        borderColor: isDark ? \"#efefef\" : \"#8d8d8d\"\n      },\n      default: {}\n    })),\n    inputContainerFocused: Platform.select({\n      ios: {\n        borderColor: PlatformColor(\"label\")\n      },\n      android: {\n        borderColor: isDark ? \"#58c7b9\" : \"#169689\"\n      },\n      default: {}\n    }),\n    inputText: Platform.select({\n      ios: {\n        fontSize: 20,\n        color: PlatformColor(\"label\")\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"primary_text_dark\" : \"primary_text_light\")),\n        fontSize: 20\n      },\n      default: {}\n    }),\n    label: Platform.select({\n      ios: {\n        color: PlatformColor(\"label\")\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"primary_text_dark\" : \"primary_text_light\")),\n        fontSize: 14\n      },\n      default: {}\n    }),\n    hiddenInput: {\n      position: \"absolute\",\n      height: 0,\n      width: 0,\n      opacity: 0\n    }\n  });\n};\n\nexport default DialogCodeInput;","map":{"version":3,"sources":["C:/Users/USER/signupp/node_modules/react-native-dialog/lib/CodeInput.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PlatformColor","ViewPropTypes","useTheme","PropTypes","DialogCodeInput","props","style","wrapperStyle","digitContainerStyle","digitContainerFocusedStyle","digitStyle","codeLength","onCodeChange","nodeProps","buildStyles","styles","codeRef","useRef","useState","autoFocus","containerIsFocused","setContainerIsFocused","code","setCode","codeDigitsArray","Array","fill","emptyInputChar","handleContainerPress","_a","current","focus","onCodeChangePress","blur","handleOnBlur","toDigitInput","_value","idx","digit","isCurrentDigit","isLastDigit","isCodeFull","isFocused","containerStyle","inputContainer","inputContainerFocused","createElement","View","key","Text","inputText","textInputWrapper","Pressable","onPress","codeContainer","map","TextInput","ref","hiddenInput","keyboardType","returnKeyType","textContentType","onSubmitEditing","maxLength","onChangeText","propTypes","number","func","displayName","isDark","StyleSheet","create","width","flexDirection","alignSelf","justifyContent","marginBottom","flex","borderColor","borderBottomWidth","paddingBottom","marginHorizontal","alignItems","Platform","select","ios","android","default","fontSize","color","label","position","height","opacity"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Text, TextInput, View, Pressable, PlatformColor, ViewPropTypes, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\nconst DialogCodeInput = (props) => {\n    const { style, wrapperStyle, digitContainerStyle, digitContainerFocusedStyle, digitStyle, codeLength = 4, onCodeChange } = props, nodeProps = __rest(props, [\"style\", \"wrapperStyle\", \"digitContainerStyle\", \"digitContainerFocusedStyle\", \"digitStyle\", \"codeLength\", \"onCodeChange\"]);\n    const { styles } = useTheme(buildStyles);\n    const codeRef = React.useRef(null);\n    const [containerIsFocused, setContainerIsFocused] = React.useState(props.autoFocus || false);\n    const [code, setCode] = React.useState(\"\");\n    const codeDigitsArray = new Array(codeLength).fill(0);\n    const emptyInputChar = \" \";\n    const handleContainerPress = () => {\n        var _a;\n        setContainerIsFocused(true);\n        (_a = codeRef === null || codeRef === void 0 ? void 0 : codeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    };\n    const onCodeChangePress = (t) => {\n        var _a;\n        setCode(t);\n        typeof onCodeChange === \"function\" && onCodeChange(t);\n        if (t.length === codeLength) {\n            setContainerIsFocused(false);\n            (_a = codeRef === null || codeRef === void 0 ? void 0 : codeRef.current) === null || _a === void 0 ? void 0 : _a.blur();\n        }\n    };\n    const handleOnBlur = () => setContainerIsFocused(false);\n    const toDigitInput = (_value, idx) => {\n        const digit = code[idx] || emptyInputChar;\n        const isCurrentDigit = idx === code.length;\n        const isLastDigit = idx === codeLength - 1;\n        const isCodeFull = code.length === codeLength;\n        const isFocused = isCurrentDigit || (isLastDigit && isCodeFull);\n        const containerStyle = containerIsFocused && isFocused\n            ? [\n                styles.inputContainer,\n                digitContainerStyle,\n                styles.inputContainerFocused,\n                digitContainerFocusedStyle,\n            ]\n            : [styles.inputContainer, digitContainerStyle];\n        return (React.createElement(View, { key: idx, style: containerStyle },\n            React.createElement(Text, { style: [styles.inputText, digitStyle] }, digit)));\n    };\n    return (React.createElement(View, { style: [styles.textInputWrapper, wrapperStyle] },\n        React.createElement(Pressable, { onPress: handleContainerPress, style: [styles.codeContainer, style] }, codeDigitsArray.map(toDigitInput)),\n        React.createElement(TextInput, Object.assign({ ref: codeRef, style: styles.hiddenInput, keyboardType: \"number-pad\", returnKeyType: \"done\", textContentType: \"oneTimeCode\", onSubmitEditing: handleOnBlur, maxLength: codeLength, onChangeText: onCodeChangePress }, nodeProps))));\n};\nDialogCodeInput.propTypes = Object.assign(Object.assign({}, ViewPropTypes), { wrapperStyle: ViewPropTypes.style, digitContainerStyle: ViewPropTypes.style, digitContainerFocusedStyle: ViewPropTypes.style, digitStyle: ViewPropTypes.style, codeLength: PropTypes.number, onCodeChange: PropTypes.func, style: Text.propTypes.style });\nDialogCodeInput.displayName = \"DialogCodeInput\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    codeContainer: {\n        width: \"90%\",\n        flexDirection: \"row\",\n        alignSelf: \"center\",\n        justifyContent: \"space-between\",\n        marginBottom: 20,\n    },\n    inputContainer: Object.assign({ flex: 1, borderColor: PlatformColor(\"separator\"), borderBottomWidth: 3, paddingBottom: 5, marginHorizontal: 5, alignItems: \"center\" }, Platform.select({\n        ios: {\n            borderColor: PlatformColor(\"separator\"),\n        },\n        android: {\n            //borderColor: PlatformColor(`@android:color/${isDark ? \"secondary_text_dark\" : \"secondary_text_light\"}`),\n            borderColor: isDark ? \"#efefef\" : \"#8d8d8d\",\n        },\n        default: {},\n    })),\n    inputContainerFocused: Platform.select({\n        ios: {\n            borderColor: PlatformColor(\"label\"),\n        },\n        android: {\n            /* borderColor: PlatformColor(\n              `@android:color/${\n                isDark ? \"primary_text_dark\" : \"primary_text_light\"\n              }`\n            ),*/\n            borderColor: isDark ? \"#58c7b9\" : \"#169689\",\n        },\n        default: {},\n    }),\n    inputText: Platform.select({\n        ios: {\n            fontSize: 20,\n            color: PlatformColor(\"label\"),\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n            fontSize: 20,\n        },\n        default: {},\n    }),\n    label: Platform.select({\n        ios: {\n            color: PlatformColor(\"label\"),\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n            fontSize: 14,\n        },\n        default: {},\n    }),\n    hiddenInput: {\n        position: \"absolute\",\n        height: 0,\n        width: 0,\n        opacity: 0,\n    },\n});\nexport default DialogCodeInput;\n"]},"metadata":{},"sourceType":"module"}
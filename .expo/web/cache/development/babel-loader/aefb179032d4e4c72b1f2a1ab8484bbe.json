{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { HomeScreen } from \"./Components/FirstHomeScreen/HomeScreen\";\nimport { Login } from \"./Components/LoginScreen/Login\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { SignUp } from \"./Components/SignupScreen/SignUp\";\nimport { FrontScreen } from \"./Components/HomeScreen/FrontScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Settingprof } from \"./Components/ProfileScreens/Settingprof\";\nimport { Payment } from \"./Components/ProfileScreens/Payment\";\nimport { useState } from \"react\";\nimport { ChangePassword } from \"./Components/ProfileScreens/ChangePassword\";\nimport { ForgotPassword } from \"./Components/ProfileScreens/ForgotPassword\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from \"react\";\nimport { Reducer } from \"react\";\nimport { EditProfile } from \"./Components/ProfileScreens/EditProfile\";\nimport { MapScreen } from \"./Components/Mapsource/MapScreen\";\nimport { MapDirection } from \"./Components/Mapsource/MapDirection\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { HelperListNearbye } from \"./Components/HomeScreen/HelperListNearbye\";\nimport { ChatScreen } from \"./Components/ChatScreen/ChatScreen\";\nimport { HelperChat } from \"./Components/ChatScreen/HelperChat\";\nimport Pay from \"./Components/Pay\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  var userToken;\n  userToken = null;\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('xyz'));\n\n          case 3:\n            userToken = _context.sent;\n            console.log(\"hello its profile\", userToken);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n\n  function Home() {\n    return _jsx(Stack.Navigator, {\n      children: _jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"FrontScreen\",\n          component: FrontScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Map Screen\",\n          component: MapScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Helpers\",\n          component: HelperListNearbye\n        })]\n      })\n    });\n  }\n\n  function Helper() {\n    return _jsx(View, {\n      style: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(Text, {\n        children: \"Helper!\"\n      })\n    });\n  }\n\n  function Chat() {\n    return _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Halper Chat\",\n        component: HelperChat\n      }), _jsx(Stack.Screen, {\n        name: \"Chat \",\n        component: ChatScreen\n      })]\n    });\n  }\n\n  function Profile(_ref) {\n    var route = _ref.route;\n    return _jsx(Stack.Navigator, {\n      children: _jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Profil\",\n          component: Settingprof\n        }), _jsx(Stack.Screen, {\n          name: \"Payment\",\n          component: Payment\n        }), _jsx(Stack.Screen, {\n          name: \"ChangePassword\",\n          component: ChangePassword\n        }), _jsx(Stack.Screen, {\n          name: \"Forgot Password\",\n          component: ForgotPassword\n        }), _jsx(Stack.Screen, {\n          name: \"Edit Profile\",\n          component: EditProfile\n        })]\n      })\n    });\n  }\n\n  function FrontScr(_ref2) {\n    var route = _ref2.route;\n    return _jsxs(Tab.Navigator, {\n      screenOptions: {\n        gesturesEnabled: false,\n        route: route\n      },\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n                color = _ref4.color,\n                size = _ref4.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Helper\") {\n              iconName = focused ? \"ios-heart\" : \"ios-heart-outline\";\n            } else if (route.name === \"Chat\") {\n              iconName = focused ? \"ios-chatbox-ellipses\" : \"ios-chatbox-ellipses-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Helper\",\n        component: Helper\n      }), _jsx(Tab.Screen, {\n        name: \"Chat\",\n        component: Chat,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: {\n          headerShown: false\n        }\n      })]\n    });\n  }\n\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Pay\",\n        component: Pay\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"SignUp\",\n        component: SignUp\n      }), _jsx(Stack.Screen, {\n        name: \"Map Screen\",\n        component: MapScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Settingprof\",\n        component: Settingprof\n      }), _jsx(Stack.Screen, {\n        name: \"FrontScr\",\n        component: FrontScr,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"FrontScreen\",\n        component: FrontScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Forgot Password\",\n        component: ForgotPassword\n      })]\n    }), _jsx(FlashMessage, {\n      position: \"top\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/App.js"],"names":["HomeScreen","Login","NavigationContainer","createNativeStackNavigator","SignUp","FrontScreen","Ionicons","createBottomTabNavigator","Settingprof","Payment","useState","ChangePassword","ForgotPassword","AsyncStorage","useEffect","Reducer","EditProfile","MapScreen","MapDirection","FlashMessage","HelperListNearbye","ChatScreen","HelperChat","Pay","Stack","LogBox","ignoreLogs","App","Tab","val","setVal","userToken","getItem","console","log","Home","headerShown","Helper","flex","justifyContent","alignItems","Chat","Profile","route","FrontScr","gesturesEnabled","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","styles","StyleSheet","create","container","backgroundColor"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View,LogBox } from \"react-native\";\nimport { HomeScreen } from \"./Components/FirstHomeScreen/HomeScreen\";\nimport { Login } from \"./Components/LoginScreen/Login\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { SignUp } from \"./Components/SignupScreen/SignUp\";\nimport { FrontScreen } from \"./Components/HomeScreen/FrontScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Settingprof } from \"./Components/ProfileScreens/Settingprof\";\nimport { Payment } from \"./Components/ProfileScreens/Payment\";\nimport { useState } from \"react\";\nimport { ChangePassword } from \"./Components/ProfileScreens/ChangePassword\";\nimport { ForgotPassword } from \"./Components/ProfileScreens/ForgotPassword\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from \"react\";\nimport { Reducer } from \"react\";\nimport { EditProfile } from \"./Components/ProfileScreens/EditProfile\";\nimport { MapScreen } from \"./Components/Mapsource/MapScreen\";\nimport { MapDirection } from \"./Components/Mapsource/MapDirection\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { HelperListNearbye } from \"./Components/HomeScreen/HelperListNearbye\";\nimport { ChatScreen } from \"./Components/ChatScreen/ChatScreen\";\nimport { HelperChat } from \"./Components/ChatScreen/HelperChat\";\nimport Pay from \"./Components/Pay\";\nconst Stack = createNativeStackNavigator();\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\nexport default function App() {\n\n  \n  const Tab = createBottomTabNavigator();\n  const [val, setVal] = useState();\n \n  let userToken;\n  userToken = null;\n  useEffect(async () => {\n    try {\n      userToken = await AsyncStorage.getItem('xyz')\n      console.log(\"hello its profile\",userToken);\n    }\n    catch (e) {\n      console.log(e);\n    }\n  })\n  \n  \n  \n  \n  function Home() {\n    return (\n      // <FrontScreen />\n      <Stack.Navigator>\n        <Stack.Group>\n        <Stack.Screen name=\"FrontScreen\" component={FrontScreen} options={{ headerShown: false }}/>\n          <Stack.Screen name=\"Map Screen\" component={MapScreen} />\n          <Stack.Screen name=\"Helpers\" component={HelperListNearbye} />\n          </Stack.Group>\n      </Stack.Navigator>\n    \n    );\n  }\n\n  function Helper() {\n\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text>Helper!</Text>\n      </View>\n    );\n  }\n  function Chat() {\n    return (\n    \n      <Stack.Navigator>\n          <Stack.Screen name=\"Halper Chat\" component={HelperChat}   />\n          <Stack.Screen name=\"Chat \" component={ChatScreen}  />\n          \n        </Stack.Navigator>\n    );\n  }\n \n \n  function Profile ({route}) {\n    \n    return (\n     \n      <Stack.Navigator>\n        <Stack.Group>\n          <Stack.Screen name=\"Profil\" component={Settingprof}/>\n          <Stack.Screen name=\"Payment\" component={Payment} />\n         <Stack.Screen name=\"ChangePassword\" component={ChangePassword} />\n          <Stack.Screen name=\"Forgot Password\" component={ForgotPassword} />\n          <Stack.Screen name=\"Edit Profile\" component={EditProfile}/>\n          </Stack.Group>\n        </Stack.Navigator>\n    );\n\n    \n  }\n  function FrontScr({route}) {\n  \n    \n    return (\n    <Tab.Navigator  \n    screenOptions={{  gesturesEnabled: false,route}}  \n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Helper\") {\n              iconName = focused ? \"ios-heart\" : \"ios-heart-outline\";\n            } else if (route.name === \"Chat\") {\n              iconName = focused\n                ? \"ios-chatbox-ellipses\"\n                : \"ios-chatbox-ellipses-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n     \n        <Tab.Screen name=\"Home\" component={Home} options={{ headerShown: false}}/> \n        <Tab.Screen name=\"Helper\" component={Helper}/>\n        <Tab.Screen name=\"Chat\" component={Chat}  options={{ headerShown: false }} />\n        <Tab.Screen name=\"Profile\" component={Profile} options={{ headerShown: false }} />\n      </Tab.Navigator>\n       \n    );\n  }\n\n  return (\n    // <RealHomePage />\n    //  <BoxHelper />\n    // <HelperView/>\n    \n    <NavigationContainer>\n      <Stack.Navigator >\n      {/* <Stack.Screen name=\"Chat\" component={ChatScreen}/> */}\n      <Stack.Screen name=\"Pay\" component={Pay} />\n      {/* <Stack.Screen name=\"Nearbye Helpers\" component={HelperListNearbye} options={{ headerShown: false }} /> */}\n       <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} />\n        <Stack.Screen name=\"SignUp\" component={SignUp} />\n          <Stack.Screen name=\"Map Screen\" component={MapScreen} />\n     \n          <Stack.Screen name=\"Settingprof\" component={Settingprof} />\n      {/* <Stack.Screen name=\"EditProfile\"  component={EditProfile} options={{ headerShown: false }} /> */}\n        <Stack.Screen name=\"FrontScr\" component={FrontScr} options={{ headerShown: false }} />\n        <Stack.Screen name=\"FrontScreen\" component={FrontScreen} />\n        \n        {/* <Stack.Screen name=\"MapScreen\" component={MapScreen} options={{ headerShown: false }} /> */}\n        <Stack.Screen name=\"Forgot Password\" component={ForgotPassword}/>\n        \n      </Stack.Navigator>\n      <FlashMessage position=\"top\" /> \n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NotiData } from \"../../Style/NotiDtata\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Notifications = function Notifications(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var Item = function Item(_ref2) {\n    var item = _ref2.item,\n        onPress = _ref2.onPress,\n        backgroundColor = _ref2.backgroundColor,\n        textColor = _ref2.textColor;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Detail', {\n          det: item.Skill\n        });\n      },\n      style: [styles.item, backgroundColor],\n      children: _jsxs(View, {\n        style: {\n          paddingLeft: 15\n        },\n        children: [_jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: item.name\n          }), _jsx(Text, {\n            style: {\n              fontSize: 14,\n              fontWeight: 'bold',\n              color: 'green',\n              marginLeft: 140\n            },\n            children: item.Time\n          })]\n        }), _jsx(Text, {\n          style: styles.title2,\n          children: item.Skill\n        }), _jsx(View, {\n          pointerEvents: \"none\"\n        })]\n      })\n    });\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\n    var color = item.id === selectedId ? 'white' : 'black';\n    return _jsx(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: NotiData,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      extraData: selectedId\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e0e0e0\"\n  },\n  item: {\n    padding: 15,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    borderRadius: 20,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  title2: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/Notification/Notifications.js"],"names":["React","useState","NotiData","Notifications","navigation","selectedId","setSelectedId","Item","item","onPress","backgroundColor","textColor","navigate","det","Skill","styles","paddingLeft","flexDirection","title","name","fontSize","fontWeight","color","marginLeft","Time","title2","renderItem","id","container","StyleSheet","create","flex","padding","marginVertical","marginHorizontal","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FlatList, SafeAreaView, StyleSheet, Text, TouchableOpacity,View } from \"react-native\";\r\nimport { NotiData } from \"../../Style/NotiDtata\";\r\n\r\n\r\n\r\nexport const Notifications= ({ navigation }) => {\r\n  \r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n    <TouchableOpacity onPress={()=>navigation.navigate('Detail',{det:item.Skill})} style={[styles.item, backgroundColor,]}>\r\n   \r\n      <View style={{ paddingLeft: 15 }}>\r\n        <View style={{flexDirection:\"row\"}}>\r\n              <Text style={styles.title}>{item.name}</Text>\r\n              <Text style={{ fontSize: 14, fontWeight: 'bold', color: 'green',marginLeft:140 }}>{item.Time}</Text>\r\n              </View>\r\n          <Text style={styles.title2}>{item.Skill}</Text>\r\n\r\n        <View pointerEvents=\"none\">\r\n      \r\n          </View>\r\n          </View>\r\n         \r\n    </TouchableOpacity>\r\n  );\r\n\r\n\r\n  const renderItem = ({item}) => {\r\n    const backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\r\n    const color = item.id === selectedId ? 'white' : 'black';\r\n  \r\n\r\n     \r\n    return (\r\n      <Item\r\n        item={item}\r\n        onPress={() => setSelectedId(item.id)}\r\n        backgroundColor={{ backgroundColor }}\r\n        textColor={{ color }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        data={NotiData}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n        extraData={selectedId}\r\n      \r\n      >\r\n        \r\n      </FlatList>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor:\"#e0e0e0\",\r\n  },\r\n  item: {\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    borderRadius:20,\r\n    flexDirection:\"row\",\r\n\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight:'bold'\r\n\r\n  },\r\n  title2: {\r\n    fontSize: 12,\r\n    fontWeight:'bold'\r\n\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
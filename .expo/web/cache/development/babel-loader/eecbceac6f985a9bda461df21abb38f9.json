{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { decode } from \"@mapbox/polyline\";\nimport MapView, { Polyline } from \"react-native-maps\";\nexport var getDirections = function getDirections(startLoc, destinationLoc) {\n  var KEY, resp, respJson, points, coords;\n  return _regeneratorRuntime.async(function getDirections$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          KEY = \"AIzaSyBMLMjDyHL-q05Eiqv0upnqOZ7UPIfCoYs\";\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/directions/json?origin=\" + startLoc + \"&destination=\" + destinationLoc + \"&key=\" + KEY));\n\n        case 4:\n          resp = _context.sent;\n          console.log(startLoc, destinationLoc);\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(resp.json());\n\n        case 8:\n          respJson = _context.sent;\n          points = decode(respJson.routes[0].overview_polyline.points);\n          console.log(points);\n          coords = points.map(function (point, index) {\n            return {\n              latitude: point[0],\n              longitude: point[1]\n            };\n          });\n          return _context.abrupt(\"return\", coords);\n\n        case 15:\n          _context.prev = 15;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", _context.t0);\n\n        case 18:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 15]], Promise);\n};","map":{"version":3,"sources":["C:/Users/USER/signupp/Style/getDirections.js"],"names":["decode","MapView","Polyline","getDirections","startLoc","destinationLoc","KEY","fetch","resp","console","log","json","respJson","points","routes","overview_polyline","coords","map","point","index","latitude","longitude"],"mappings":";AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,OAAP,IAAkBC,QAAlB,QAAkC,mBAAlC;AACA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOC,QAAP,EAAiBC,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnBC,UAAAA,GAFmB,GAEb,yCAFa;AAAA;AAAA,2CAIRC,KAAK,kEAC2CH,QAD3C,qBACmEC,cADnE,aACyFC,GADzF,CAJG;;AAAA;AAIrBE,UAAAA,IAJqB;AAQzBC,UAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAqBC,cAArB;AARyB;AAAA,2CASJG,IAAI,CAACG,IAAL,EATI;;AAAA;AASrBC,UAAAA,QATqB;AAUrBC,UAAAA,MAVqB,GAUZb,MAAM,CAACY,QAAQ,CAACE,MAAT,CAAgB,CAAhB,EAAmBC,iBAAnB,CAAqCF,MAAtC,CAVM;AAWzBJ,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACIG,UAAAA,MAZqB,GAYZH,MAAM,CAACI,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACxC,mBAAO;AACLC,cAAAA,QAAQ,EAAEF,KAAK,CAAC,CAAD,CADV;AAELG,cAAAA,SAAS,EAAEH,KAAK,CAAC,CAAD;AAFX,aAAP;AAID,WALY,CAZY;AAAA,2CAkBlBF,MAlBkB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import { decode } from \"@mapbox/polyline\"; //please install this package before running!\r\nimport MapView, { Polyline } from \"react-native-maps\";\r\nexport const getDirections = async (startLoc, destinationLoc) => {\r\n  try {\r\n    const KEY = \"AIzaSyBMLMjDyHL-q05Eiqv0upnqOZ7UPIfCoYs\"; //put your API key here.\r\n    //otherwise, you'll have an 'unauthorized' error.\r\n    let resp = await fetch(\r\n      `https://maps.googleapis.com/maps/api/directions/json?origin=${startLoc}&destination=${destinationLoc}&key=${KEY}`\r\n   \r\n    );\r\n    console.log(startLoc,destinationLoc)\r\n    let respJson = await resp.json();\r\n    let points = decode(respJson.routes[0].overview_polyline.points);\r\n    console.log(points);\r\n    let coords = points.map((point, index) => {\r\n      return {\r\n        latitude: point[0],\r\n        longitude: point[1]\r\n      };\r\n    });\r\n    return coords;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};"]},"metadata":{},"sourceType":"module"}
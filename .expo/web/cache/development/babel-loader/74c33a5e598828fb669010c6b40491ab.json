{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dialog from \"react-native-dialog\";\nimport { firebase } from \"./Config\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ImagePikker() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      image = _useState2[0],\n      setImage = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pickedImagePath = _useState6[0],\n      setPickedImagePath = _useState6[1];\n\n  var userToken;\n  useEffect(function _callee() {\n    var imageRef;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('xyz'));\n\n          case 3:\n            userToken = _context.sent;\n            console.log(\"hello its front screen\", userToken);\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n            imageRef = firebase.storage().ref(userToken);\n            imageRef.getDownloadURL().then(function (url) {\n              setImage(url);\n              wait(3000).then(function () {\n                return setRefreshing(false);\n              });\n              console.log('refress');\n            }).catch(function (e) {\n              return console.log('getting downloadURL of image error => ', e);\n            });\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  });\n\n  var uploadImage = function uploadImage(image) {\n    var response, blob, ref;\n    return _regeneratorRuntime.async(function uploadImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(image));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.blob());\n\n          case 5:\n            blob = _context2.sent;\n            ref = firebase.storage().ref().child(userToken);\n            return _context2.abrupt(\"return\", ref.put(blob));\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showDialog = function showDialog() {\n    setVisible(true);\n  };\n\n  var handleCancel = function handleCancel() {\n    setVisible(false);\n  };\n\n  useEffect(function () {\n    (function _callee2() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(Platform.OS !== \"web\")) {\n                _context3.next = 6;\n                break;\n              }\n\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context3.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== \"granted\") {\n                alert(\"Sorry, Camera roll permissions are required to make this work!\");\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var openCamera = function openCamera() {\n    var permissionResult, result;\n    return _regeneratorRuntime.async(function openCamera$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.requestCameraPermissionsAsync());\n\n          case 2:\n            permissionResult = _context4.sent;\n\n            if (!(permissionResult.granted === false)) {\n              _context4.next = 6;\n              break;\n            }\n\n            alert(\"You've refused to allow this appp to access your camera!\");\n            return _context4.abrupt(\"return\");\n\n          case 6:\n            _context4.next = 8;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 8:\n            result = _context4.sent;\n            setVisible(false);\n            console.log(result);\n\n            if (!result.cancelled) {\n              setPickedImagePath(result.uri);\n              console.log(result.uri);\n\n              try {\n                uploadImage(result.uri);\n              } catch (error) {\n                alert(error);\n              }\n            }\n\n            image == null;\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pickImage = function pickImage() {\n    var result;\n    return _regeneratorRuntime.async(function pickImage$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context5.sent;\n            console.log(result);\n\n            if (!result.cancelled) {\n              setImage(result.uri);\n              result.name;\n\n              try {\n                uploadImage(result.uri);\n              } catch (error) {\n                alert(error);\n              }\n            }\n\n            setVisible(false);\n            pickedImagePath == null;\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: {\n        flex: 1,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: [_jsx(TouchableOpacity, {\n        onPress: showDialog,\n        style: {\n          width: 100,\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          height: 100,\n          borderRadius: 100 / 2,\n          borderColor: \"#1976d2\",\n          borderWidth: 2\n        },\n        children: _jsxs(ImageBackground, {\n          style: {\n            justifyContent: \"center\",\n            alignContent: 'center',\n            alignItems: 'center',\n            width: 95,\n            height: 95,\n            borderRadius: 95 / 2\n          },\n          source: require(\"../assets/user.png\"),\n          children: [_jsxs(Dialog.Container, {\n            visible: visible,\n            children: [_jsx(Dialog.Title, {\n              children: \"Upload Photo\"\n            }), _jsx(Dialog.Description, {\n              children: \"Chose Your Profile Picture?\"\n            }), _jsx(Dialog.Button, {\n              label: \"Camera\",\n              onPress: openCamera\n            }), _jsx(Dialog.Button, {\n              label: \"Cancel\",\n              onPress: handleCancel\n            }), _jsx(Dialog.Button, {\n              label: \"Gallery\",\n              onPress: pickImage\n            })]\n          }), pickedImagePath !== '' && _jsx(Image, {\n            source: {\n              uri: pickedImagePath\n            },\n            style: {\n              width: 95,\n              borderRadius: 95 / 2,\n              height: 95\n            }\n          }) || image && _jsx(Image, {\n            source: {\n              uri: image\n            },\n            style: {\n              width: 95,\n              borderRadius: 95 / 2,\n              height: 95\n            }\n          })]\n        })\n      }), _jsx(Button, {\n        title: \"Upload Image\",\n        onPress: showDialog\n      })]\n    }), _jsx(View, {\n      style: styles.container\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/ImagePikker.js"],"names":["React","useState","useEffect","ImagePicker","Dialog","firebase","AsyncStorage","ImagePikker","image","setImage","visible","setVisible","pickedImagePath","setPickedImagePath","userToken","getItem","console","log","imageRef","storage","ref","getDownloadURL","then","url","wait","setRefreshing","catch","e","uploadImage","fetch","response","blob","child","put","showDialog","handleCancel","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","openCamera","requestCameraPermissionsAsync","permissionResult","granted","launchCameraAsync","result","cancelled","uri","error","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","name","flex","alignItems","justifyContent","width","height","borderRadius","borderColor","borderWidth","alignContent","require","styles","container","StyleSheet","create","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button, Image, View, StyleSheet } from \"react-native\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { TouchableOpacity,ImageBackground } from \"react-native\";\r\nimport Dialog from \"react-native-dialog\";\r\nimport { firebase } from \"./Config\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function ImagePikker() {\r\n  const [image, setImage] = useState(null);\r\n  const [visible, setVisible] = useState(false);\r\n  const [pickedImagePath, setPickedImagePath] = useState(\"\");\r\n \r\n  let userToken;\r\n  \r\n  useEffect(async () => {\r\n    \r\ntry {\r\n      userToken = await AsyncStorage.getItem('xyz')\r\n      console.log(\"hello its front screen\",userToken);\r\n      } catch (e) {\r\n      console.log(e);\r\n    }\r\n    let imageRef = firebase.storage().ref(userToken);\r\n    imageRef.getDownloadURL().then((url) => {\r\n      setImage(url);\r\n      wait(3000).then(() => setRefreshing(false));\r\n      console.log('refress')\r\n      })\r\n      .catch((e) => console.log('getting downloadURL of image error => ', e));\r\n    \r\n  })\r\n  \r\n  const uploadImage = async (image) => {\r\n  const response = await fetch(image);\r\n  const blob = await response.blob();\r\n  var ref = firebase.storage().ref().child(userToken);\r\n  return ref.put(blob);\r\n  }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n  const showDialog = () => {\r\n    setVisible(true);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      if (Platform.OS !== \"web\") {\r\n        const { status } =\r\n          await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n        if (status !== \"granted\") {\r\n          alert(\r\n            \"Sorry, Camera roll permissions are required to make this work!\"\r\n          );\r\n        }\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const openCamera = async () => {\r\n    \r\n    // Ask the user for the permission to access the camera\r\n    const permissionResult = await ImagePicker.requestCameraPermissionsAsync();\r\n\r\n    if (permissionResult.granted === false) {\r\n      alert(\"You've refused to allow this appp to access your camera!\");\r\n      return;\r\n    }\r\n\r\n    const result = await ImagePicker.launchCameraAsync();\r\n    setVisible(false);\r\n    // Explore the result\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setPickedImagePath(result.uri);\r\n      console.log(result.uri);\r\n      try { uploadImage(result.uri); }catch(error){alert(error)}\r\n    }\r\n    image == null;\r\n    \r\n  };\r\n\r\n  const pickImage = async () => {\r\n    \r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n      setImage(result.uri);\r\n      result.name\r\n      try { uploadImage(result.uri); }catch(error){alert(error)}\r\n    }\r\n   \r\n    setVisible(false);\r\n    pickedImagePath == null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\r\n        <TouchableOpacity\r\n          onPress={showDialog}\r\n          style={{\r\n            width: 100,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: 100,\r\n            borderRadius: 100 / 2,\r\n            borderColor: \"#1976d2\",\r\n            borderWidth: 2,\r\n          }}\r\n        >\r\n          <ImageBackground style={{justifyContent: \"center\",alignContent:'center',alignItems:'center',\r\n              width:95,\r\n              height:95,\r\n            borderRadius: 95 / 2,\r\n          }} source={require('../assets/user.png')} >\r\n            \r\n          <Dialog.Container visible={visible}>\r\n            <Dialog.Title>Upload Photo</Dialog.Title>\r\n            <Dialog.Description>\r\n              Chose Your Profile Picture?\r\n            </Dialog.Description>\r\n            <Dialog.Button label=\"Camera\" onPress={openCamera} />\r\n            <Dialog.Button label=\"Cancel\" onPress={handleCancel} />\r\n            <Dialog.Button label=\"Gallery\" onPress={pickImage} />\r\n            \r\n          </Dialog.Container>\r\n          \r\n           {/* { <Image\r\n                style={{width: 95, alignItems: 'center', justifyContent: 'center', height: 95, borderRadius: 95 / 2 }}\r\n          \r\n          source={require(\"../assets/Camera.png\")}/> } */}\r\n                \r\n          {pickedImagePath !== '' && <Image source={{ uri: pickedImagePath }} style={{ width: 95,borderRadius: 95/2, height: 95 }}  />|| image && <Image source={{ uri: image }} style={{ width: 95,borderRadius: 95/2, height: 95 }} />}\r\n          </ImageBackground>\r\n       \r\n        </TouchableOpacity>\r\n        <Button title=\"Upload Image\" onPress={showDialog} />\r\n      </View>\r\n\r\n      <View style={styles.container}>\r\n        {/* <Button title=\"Show dialog\" onPress={showDialog} /> */}\r\n      </View>\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
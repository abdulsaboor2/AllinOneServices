{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"user\", \"navigation\"];\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport react, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Slider } from \"./Slider\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport React, { useEffect } from \"react\";\nimport { BoxHelper } from \"../../Style/BoxHelper\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SearchBar from \"react-native-dynamic-search-bar\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { NativeScreenNavigationContainer } from \"react-native-screens\";\nimport * as Location from \"expo-location\";\nimport Spinner from \"react-native-loading-spinner-overlay\";\nimport Geocoder from \"react-native-geocoding\";\nimport GoogleApi from \"../Mapsource/GoogleApi\";\nimport { firebase } from \"../firebaseConfig/Config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var FrontScreen = function FrontScreen(_ref) {\n  var user = _ref.user,\n      navigation = _ref.navigation,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(\"Wait, we are fetching you location...\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      displayCurrentAddress = _useState4[0],\n      setDisplayCurrentAddress = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      locationServiceEnabled = _useState8[0],\n      setLocationServiceEnabled = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      location = _useState10[0],\n      setLocation = _useState10[1];\n\n  var _useState11 = useState(\"black\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      colo = _useState12[0],\n      setColo = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      geeti = _useState14[0],\n      setGeeti = _useState14[1];\n\n  var userToken;\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"xyz\"));\n\n          case 3:\n            userToken = _context.sent;\n            console.log(\"hello itsewddv profile\", userToken);\n            getLocation();\n            CheckIfLocationEnabled();\n            console.log(\"opned\");\n            BackHandler.addEventListener(\"hardwareBackPress\", backAction);\n            return _context.abrupt(\"return\", function () {\n              return BackHandler.removeEventListener(\"hardwareBackPress\", backAction);\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var getNameLocation = function getNameLocation() {\n    console.log(\"API : \", GoogleApi.Google_Api);\n    Geocoder.init(\"AIzaSyD8P1F_dvcvHh_BNsBlgP-kHxUClIgyWrY\");\n    Geocoder.from(location.latitude, location.longitude).then(function (json) {\n      var address_Component = json.results[0].formatted_address;\n      console.log(address_Component);\n      setGeeti(address_Component);\n      setColo(\"green\");\n    }).catch(function (error) {\n      return console.warn(error);\n    });\n  };\n\n  var getLocation = function getLocation() {\n    var _await$Location$reque, granted, _await$Location$getCu, _await$Location$getCu2, latitude, longitude;\n\n    return _regeneratorRuntime.async(function getLocation$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n          case 3:\n            _await$Location$reque = _context2.sent;\n            granted = _await$Location$reque.granted;\n\n            if (granted) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 7:\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n          case 9:\n            _await$Location$getCu = _context2.sent;\n            _await$Location$getCu2 = _await$Location$getCu.coords;\n            latitude = _await$Location$getCu2.latitude;\n            longitude = _await$Location$getCu2.longitude;\n            setLocation({\n              latitude: Number(latitude),\n              longitude: Number(longitude),\n              latitudeDelta: 0.000212699887515984465,\n              longitudeDelta: 0.000999999\n            });\n            Geocoder.init(\"AIzaSyD8P1F_dvcvHh_BNsBlgP-kHxUClIgyWrY\");\n            Geocoder.from(latitude, longitude).then(function (json) {\n              var address_Component = json.results[0].formatted_address;\n              console.log(address_Component);\n              setGeeti(address_Component);\n              setColo(\"green\");\n            });\n            setLoading(false);\n            _context2.next = 23;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n            setLoading(false);\n\n          case 23:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 19]], Promise);\n  };\n\n  console.log(\"Its current location ff\", location);\n\n  var openSetting = function openSetting() {\n    if (Platform.OS == \"ios\") {\n      Linking.openURL(\"App-Prefs:Privacy&path=LOCATION\");\n      setVisible(false);\n    }\n  };\n\n  var CheckIfLocationEnabled = function CheckIfLocationEnabled() {\n    var enabled;\n    return _regeneratorRuntime.async(function CheckIfLocationEnabled$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(Location.hasServicesEnabledAsync());\n\n          case 2:\n            enabled = _context3.sent;\n\n            if (!enabled) {\n              Alert.alert(\"Location Service not enabled\", \"Please enable your location services to continue\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return openSetting();\n                }\n              }, {\n                text: \"Cancel\"\n              }], {\n                cancelable: false\n              });\n            } else {\n              setLocationServiceEnabled(enabled);\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var backAction = function backAction() {\n    Alert.alert(\"Hold on!\", \"Are you sure you want to close this application?\", [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return null;\n      },\n      style: \"cancel\"\n    }, {\n      text: \"YES\",\n      onPress: function onPress() {\n        return BackHandler.exitApp();\n      }\n    }]);\n    return true;\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\"\n    }), _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Spinner, {\n        visible: loading,\n        textContent: 'Getting Location...',\n        textStyle: styles.spinnerTextStyle\n      }), _jsxs(View, {\n        style: {\n          height: 60,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          paddingTop: 13,\n          paddingLeft: 17,\n          paddingRight: 15,\n          alignItems: \"baseline\",\n          marginTop: Platform.OS == \"ios\" ? 40 : 25\n        },\n        children: [_jsx(Text, {\n          style: {\n            width: \"90%\",\n            alignSelf: \"baseline\",\n            fontSize: 15,\n            fontWeight: \"bold\"\n          },\n          children: geeti\n        }), _jsx(TouchableOpacity, {\n          onPress: getLocation,\n          children: _jsx(Ionicons, {\n            style: {\n              position: \"relative\"\n            },\n            name: \"location\",\n            size: 27,\n            color: colo\n          })\n        })]\n      }), _jsx(View, {\n        children: _jsx(SearchBar, {\n          style: {\n            width: \"95%\"\n          },\n          fontColor: \"#c6c6c6\",\n          iconColor: \"#c6c6c6\",\n          shadowColor: \"#282828\",\n          cancelIconColor: \"#c6c6c6\",\n          placeholder: \"Search here\",\n          onFocus: function onFocus() {\n            return navigation.navigate(\"Search\");\n          },\n          onSearchPress: function onSearchPress() {\n            return console.log(\"Search Icon is pressed\");\n          }\n        })\n      }), _jsxs(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        style: {\n          backgroundColor: \"#fff\",\n          marginTop: 1\n        },\n        children: [_jsx(View, {\n          children: _jsx(Slider, {})\n        }), _jsx(Text, {\n          onPress: props.onPress,\n          style: {\n            color: \"gray\",\n            fontWeight: \"bold\",\n            fontSize: 14,\n            marginLeft: 5,\n            marginTop: 10,\n            marginBottom: 10\n          },\n          children: \"RECENTS\"\n        }), _jsxs(ScrollView, {\n          horizontal: true,\n          showsHorizontalScrollIndicator: false,\n          style: {\n            height: 70\n          },\n          children: [_jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/carrepair.png\")\n          }), _jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/electrician.png\")\n          }), _jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/plumber.png\")\n          }), _jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/insurance.png\")\n          }), _jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/teacher.png\")\n          }), _jsx(Image, {\n            style: styles.imgStyle,\n            source: require(\"../../assets/HelperImageIcon/fridge.png\")\n          })]\n        }), _jsx(Text, {\n          style: {\n            color: \"gray\",\n            fontWeight: \"bold\",\n            fontSize: 14,\n            marginLeft: 5,\n            marginTop: 20\n          },\n          children: \"ALL SERVICES\"\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            height: 100,\n            width: \"100%\",\n            justifyContent: 'space-around',\n            marginTop: 10\n          },\n          children: [_jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Electrician\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Electrician\",\n            imageUri: require(\"../../assets/HelperImageIcon/electrician.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Plumber\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Plumber\",\n            imageUri: require(\"../../assets/HelperImageIcon/plumber.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Car Repair\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Car Repair\",\n            imageUri: require(\"../../assets/HelperImageIcon/carrepair.png\")\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            height: 100,\n            width: \"100%\",\n            justifyContent: 'space-around',\n            marginTop: 10\n          },\n          children: [_jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Insurance\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Insurance\",\n            imageUri: require(\"../../assets/HelperImageIcon/insurance.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Doctor\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Doctor\",\n            imageUri: require(\"../../assets/HelperImageIcon/doctor.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Tutor Service\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Tutor Service\",\n            imageUri: require(\"../../assets/HelperImageIcon/teacher.png\")\n          })]\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\",\n            height: 100,\n            width: \"100%\",\n            justifyContent: 'space-around',\n            marginTop: 10\n          },\n          children: [_jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Ambulance\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Ambulance\",\n            imageUri: require(\"../../assets/HelperImageIcon/ambulance.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Refrigerator Repair\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Refrigerator Repair\",\n            imageUri: require(\"../../assets/HelperImageIcon/fridge.png\")\n          }), _jsx(BoxHelper, {\n            onPress: function onPress() {\n              navigation.navigate(\"Helpers\", {\n                name: \"Home Repair\",\n                lat: location.latitude,\n                lng: location.longitude\n              });\n            },\n            HelperType: \"Home Repair\",\n            imageUri: require(\"../../assets/HelperImageIcon/homereapir.png\")\n          })]\n        })]\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  imgStyle: {\n    height: 70,\n    width: 70,\n    borderRadius: 70 / 2,\n    borderWidth: 1,\n    borderColor: \"gray\",\n    marginLeft: 10,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.6,\n    shadowRadius: 4.65\n  },\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingTop: Platform.ios ? 30 : 0,\n    backgroundColor: \"#ffff\",\n    padding: 1\n  },\n  spinnerTextStyle: {\n    color: \"#FFF\",\n    fontSize: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/HomeScreen/FrontScreen.js"],"names":["react","useState","Slider","Ionicons","React","useEffect","BoxHelper","SearchBar","AsyncStorage","NativeScreenNavigationContainer","Location","Spinner","Geocoder","GoogleApi","firebase","FrontScreen","user","navigation","props","visible","setVisible","displayCurrentAddress","setDisplayCurrentAddress","loading","setLoading","locationServiceEnabled","setLocationServiceEnabled","location","setLocation","colo","setColo","geeti","setGeeti","userToken","getItem","console","log","getLocation","CheckIfLocationEnabled","BackHandler","addEventListener","backAction","removeEventListener","getNameLocation","Google_Api","init","from","latitude","longitude","then","json","address_Component","results","formatted_address","catch","error","warn","requestForegroundPermissionsAsync","granted","getCurrentPositionAsync","coords","Number","latitudeDelta","longitudeDelta","openSetting","Platform","OS","Linking","openURL","hasServicesEnabledAsync","enabled","Alert","alert","text","onPress","cancelable","style","exitApp","styles","container","spinnerTextStyle","height","flexDirection","justifyContent","paddingTop","paddingLeft","paddingRight","alignItems","marginTop","width","alignSelf","fontSize","fontWeight","position","navigate","backgroundColor","color","marginLeft","marginBottom","imgStyle","require","name","lat","lng","StyleSheet","create","borderRadius","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","flex","textAlign","ios","padding"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;;;;;;AAcA,SAASC,MAAT;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT;;;;;AAEA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,SAASC,+BAAT,QAAgD,sBAAhD;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;AACA,OAAOC,OAAP,MAAoB,sCAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP;AACA,SAASC,QAAT;;;;AACA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAoC;AAAA,MAAjCC,IAAiC,QAAjCA,IAAiC;AAAA,MAA3BC,UAA2B,QAA3BA,UAA2B;AAAA,MAAZC,KAAY;;AAC7D,kBAA8BjB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOkB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA0DnB,QAAQ,CAChE,uCADgE,CAAlE;AAAA;AAAA,MAAOoB,qBAAP;AAAA,MAA8BC,wBAA9B;;AAIA,mBAA8BrB,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOsB,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAA4DvB,QAAQ,CAAC,KAAD,CAApE;AAAA;AAAA,MAAOwB,sBAAP;AAAA,MAA+BC,yBAA/B;;AACA,mBAAgCzB,QAAQ,EAAxC;AAAA;AAAA,MAAO0B,QAAP;AAAA,MAAiBC,WAAjB;;AACA,oBAAwB3B,QAAQ,CAAC,OAAD,CAAhC;AAAA;AAAA,MAAO4B,IAAP;AAAA,MAAaC,OAAb;;AACA,oBAA0B7B,QAAQ,EAAlC;AAAA;AAAA,MAAO8B,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAIC,SAAJ;AACA5B,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AACRmB,YAAAA,UAAU,CAAC,IAAD,CAAV;AADQ;AAAA,6CAEUhB,YAAY,CAAC0B,OAAb,CAAqB,KAArB,CAFV;;AAAA;AAERD,YAAAA,SAFQ;AAGRE,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCH,SAAtC;AACAI,YAAAA,WAAW;AACXC,YAAAA,sBAAsB;AAEtBH,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAG,YAAAA,WAAW,CAACC,gBAAZ,CAA6B,mBAA7B,EAAkDC,UAAlD;AARQ,6CAUD;AAAA,qBACLF,WAAW,CAACG,mBAAZ,CAAgC,mBAAhC,EAAqDD,UAArD,CADK;AAAA,aAVC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAYN,EAZM,CAAT;;AAkBA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BR,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBvB,SAAS,CAAC+B,UAAhC;AACAhC,IAAAA,QAAQ,CAACiC,IAAT,CAAc,yCAAd;AACAjC,IAAAA,QAAQ,CAACkC,IAAT,CAAcnB,QAAQ,CAACoB,QAAvB,EAAiCpB,QAAQ,CAACqB,SAA1C,EACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACd,UAAIC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,iBAAxC;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYe,iBAAZ;AACAnB,MAAAA,QAAQ,CAACmB,iBAAD,CAAR;AACArB,MAAAA,OAAO,CAAC,OAAD,CAAP;AACD,KANH,EAOGwB,KAPH,CAOS,UAACC,KAAD;AAAA,aAAWpB,OAAO,CAACqB,IAAR,CAAaD,KAAb,CAAX;AAAA,KAPT;AAQD,GAXD;;AAaA,MAAMlB,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEU3B,QAAQ,CAAC+C,iCAAT,EAFV;;AAAA;AAAA;AAERC,YAAAA,OAFQ,yBAERA,OAFQ;;AAAA,gBAGXA,OAHW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,6CAMNhD,QAAQ,CAACiD,uBAAT,EANM;;AAAA;AAAA;AAAA,2DAKdC,MALc;AAKJb,YAAAA,QALI,0BAKJA,QALI;AAKMC,YAAAA,SALN,0BAKMA,SALN;AAQhBpB,YAAAA,WAAW,CAAC;AACVmB,cAAAA,QAAQ,EAAEc,MAAM,CAACd,QAAD,CADN;AAEVC,cAAAA,SAAS,EAAEa,MAAM,CAACb,SAAD,CAFP;AAGVc,cAAAA,aAAa,EAAE,uBAHL;AAIVC,cAAAA,cAAc,EAAE;AAJN,aAAD,CAAX;AAMAnD,YAAAA,QAAQ,CAACiC,IAAT,CAAc,yCAAd;AACAjC,YAAAA,QAAQ,CAACkC,IAAT,CAAcC,QAAd,EAAuBC,SAAvB,EACGC,IADH,CACQ,UAACC,IAAD,EAAU;AACd,kBAAIC,iBAAiB,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBC,iBAAxC;AACAlB,cAAAA,OAAO,CAACC,GAAR,CAAYe,iBAAZ;AACAnB,cAAAA,QAAQ,CAACmB,iBAAD,CAAR;AACArB,cAAAA,OAAO,CAAC,OAAD,CAAP;AACD,aANH;AAOAN,YAAAA,UAAU,CAAC,KAAD,CAAV;AAtBgB;AAAA;;AAAA;AAAA;AAAA;AAwBhBW,YAAAA,OAAO,CAACC,GAAR;AACAZ,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAzBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AA4BAW,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCT,QAAvC;;AAEA,MAAMqC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAIC,QAAQ,CAACC,EAAT,IAAe,KAAnB,EAA0B;AACxBC,MAAAA,OAAO,CAACC,OAAR,CAAgB,iCAAhB;AACAhD,MAAAA,UAAU,CAAC,KAAD,CAAV;AAKD;AACF,GATD;;AAWA,MAAMkB,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACT5B,QAAQ,CAAC2D,uBAAT,EADS;;AAAA;AACzBC,YAAAA,OADyB;;AAG7B,gBAAI,CAACA,OAAL,EAAc;AACZC,cAAAA,KAAK,CAACC,KAAN,CACE,8BADF,EAEE,kDAFF,EAGE,CACE;AACEC,gBAAAA,IAAI,EAAE,IADR;AAEEC,gBAAAA,OAAO,EAAE;AAAA,yBAAMV,WAAW,EAAjB;AAAA;AAFX,eADF,EAKE;AAAES,gBAAAA,IAAI,EAAE;AAAR,eALF,CAHF,EAWE;AAAEE,gBAAAA,UAAU,EAAE;AAAd,eAXF;AAaD,aAdD,MAcO;AACLjD,cAAAA,yBAAyB,CAAC4C,OAAD,CAAzB;AACD;;AAnB4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAsBA,MAAM7B,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB8B,IAAAA,KAAK,CAACC,KAAN,CACE,UADF,EAEE,kDAFF,EAGE,CACE;AACEC,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,OAAO,EAAE;AAAA,eAAM,IAAN;AAAA,OAFX;AAGEE,MAAAA,KAAK,EAAE;AAHT,KADF,EAME;AAAEH,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAA,eAAMnC,WAAW,CAACsC,OAAZ,EAAN;AAAA;AAAxB,KANF,CAHF;AAYA,WAAO,IAAP;AACD,GAdD;;AAgBA,SACE;AAAA,eAEI,KAAC,SAAD;AAAW,MAAA,QAAQ,EAAC;AAApB,MAFJ,EAII,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA,iBACE,KAAC,OAAD;AAEE,QAAA,OAAO,EAAExD,OAFX;AAIG,QAAA,WAAW,EAAE,qBAJhB;AAME,QAAA,SAAS,EAAEuD,MAAM,CAACE;AANpB,QADF,EASE,MAAC,IAAD;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,MAAM,EAAE,EADH;AAELC,UAAAA,aAAa,EAAE,KAFV;AAGLC,UAAAA,cAAc,EAAE,eAHX;AAILC,UAAAA,UAAU,EAAE,EAJP;AAKLC,UAAAA,WAAW,EAAE,EALR;AAMLC,UAAAA,YAAY,EAAE,EANT;AAOPC,UAAAA,UAAU,EAAE,UAPL;AAQLC,UAAAA,SAAS,EAACvB,QAAQ,CAACC,EAAT,IAAa,KAAb,GAAoB,EAApB,GAAuB;AAR5B,SADT;AAAA,mBAYE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLuB,YAAAA,KAAK,EAAE,KADF;AAELC,YAAAA,SAAS,EAAE,UAFN;AAGLC,YAAAA,QAAQ,EAAE,EAHL;AAILC,YAAAA,UAAU,EAAE;AAJP,WADT;AAAA,oBAQG7D;AARH,UAZF,EAsBE,KAAC,gBAAD;AAAkB,UAAA,OAAO,EAAEM,WAA3B;AAAA,oBACE,KAAC,QAAD;AACE,YAAA,KAAK,EAAE;AAAEwD,cAAAA,QAAQ,EAAE;AAAZ,aADT;AAEE,YAAA,IAAI,EAAC,UAFP;AAGE,YAAA,IAAI,EAAE,EAHR;AAIE,YAAA,KAAK,EAAEhE;AAJT;AADF,UAtBF;AAAA,QATF,EAwCE,KAAC,IAAD;AAAA,kBACE,KAAC,SAAD;AACE,UAAA,KAAK,EAAE;AAAE4D,YAAAA,KAAK,EAAE;AAAT,WADT;AAEE,UAAA,SAAS,EAAC,SAFZ;AAGE,UAAA,SAAS,EAAC,SAHZ;AAIE,UAAA,WAAW,EAAC,SAJd;AAKE,UAAA,eAAe,EAAC,SALlB;AAOE,UAAA,WAAW,EAAE,aAPf;AAQE,UAAA,OAAO,EAAE;AAAA,mBAAMxE,UAAU,CAAC6E,QAAX,CAAoB,QAApB,CAAN;AAAA,WARX;AAUE,UAAA,aAAa,EAAE;AAAA,mBAAM3D,OAAO,CAACC,GAAR,CAAY,wBAAZ,CAAN;AAAA;AAVjB;AADF,QAxCF,EAyDA,MAAC,UAAD;AAAY,QAAA,4BAA4B,EAAE,KAA1C;AAAiD,QAAA,KAAK,EAAE;AAAC2D,UAAAA,eAAe,EAAC,MAAjB;AAAwBP,UAAAA,SAAS,EAAC;AAAlC,SAAxD;AAAA,mBACE,KAAC,IAAD;AAAA,oBACE,KAAC,MAAD;AADF,UADF,EAIE,KAAC,IAAD;AACE,UAAA,OAAO,EAAEtE,KAAK,CAACwD,OADjB;AAEE,UAAA,KAAK,EAAE;AACLsB,YAAAA,KAAK,EAAE,MADF;AAELJ,YAAAA,UAAU,EAAE,MAFP;AAGLD,YAAAA,QAAQ,EAAE,EAHL;AAILM,YAAAA,UAAU,EAAE,CAJP;AAKLT,YAAAA,SAAS,EAAE,EALN;AAMLU,YAAAA,YAAY,EAAE;AANT,WAFT;AAAA;AAAA,UAJF,EAiBE,MAAC,UAAD;AACE,UAAA,UAAU,EAAE,IADd;AAEE,UAAA,8BAA8B,EAAE,KAFlC;AAGE,UAAA,KAAK,EAAE;AAAEjB,YAAAA,MAAM,EAAE;AAAV,WAHT;AAAA,qBAKE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEH,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YALF,EASE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEtB,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YATF,EAaE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEtB,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YAbF,EAiBE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEtB,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YAjBF,EAqBE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEtB,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YArBF,EAyBE,KAAC,KAAD;AACE,YAAA,KAAK,EAAEtB,MAAM,CAACqB,QADhB;AAEE,YAAA,MAAM,EAAEC,OAAO;AAFjB,YAzBF;AAAA,UAjBF,EAgDE,KAAC,IAAD;AACE,UAAA,KAAK,EAAE;AACLJ,YAAAA,KAAK,EAAE,MADF;AAELJ,YAAAA,UAAU,EAAE,MAFP;AAGLD,YAAAA,QAAQ,EAAE,EAHL;AAILM,YAAAA,UAAU,EAAE,CAJP;AAKLT,YAAAA,SAAS,EAAE;AALN,WADT;AAAA;AAAA,UAhDF,EA4DE,MAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAAEN,YAAAA,aAAa,EAAE,KAAjB;AAAuBD,YAAAA,MAAM,EAAC,GAA9B;AAAkCQ,YAAAA,KAAK,EAAC,MAAxC;AAA+CN,YAAAA,cAAc,EAAC,cAA9D;AAA6EK,YAAAA,SAAS,EAAC;AAAvF,WAAb;AAAA,qBACE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbvE,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,aADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,aARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YADF,EAYE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,SADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,SARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAZF,EAuBE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,YADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,YARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAvBF;AAAA,UA5DF,EA+FE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAClB,YAAAA,aAAa,EAAE,KAAhB;AAAsBD,YAAAA,MAAM,EAAC,GAA7B;AAAiCQ,YAAAA,KAAK,EAAC,MAAvC;AAA8CN,YAAAA,cAAc,EAAC,cAA7D;AAA4EK,YAAAA,SAAS,EAAC;AAAtF,WADT;AAAA,qBAGE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbvE,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,WADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,WARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAHF,EAcE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,QADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,QARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAdF,EAyBE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,eADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,eARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAzBF;AAAA,UA/FF,EAqIE,MAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAClB,YAAAA,aAAa,EAAE,KAAhB;AAAsBD,YAAAA,MAAM,EAAC,GAA7B;AAAiCQ,YAAAA,KAAK,EAAC,MAAvC;AAA8CN,YAAAA,cAAc,EAAC,cAA7D;AAA4EK,YAAAA,SAAS,EAAC;AAAtF,WADT;AAAA,qBAGE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbvE,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,WADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,WARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAHF,EAcE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,qBADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,qBARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAdF,EAyBE,KAAC,SAAD;AACE,YAAA,OAAO,EAAE,mBAAM;AACbnF,cAAAA,UAAU,CAAC6E,QAAX,CAAoB,SAApB,EAA+B;AAC7BO,gBAAAA,IAAI,EAAE,aADuB;AAE7BC,gBAAAA,GAAG,EAAE3E,QAAQ,CAACoB,QAFe;AAG7BwD,gBAAAA,GAAG,EAAE5E,QAAQ,CAACqB;AAHe,eAA/B;AAKD,aAPH;AAQE,YAAA,UAAU,EAAE,aARd;AASE,YAAA,QAAQ,EAAEoD,OAAO;AATnB,YAzBF;AAAA,UArIF;AAAA,QAzDA;AAAA,MAJJ;AAAA,IADF;AA6OD,CAxWM;AAyWP,IAAMtB,MAAM,GAAG0B,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,QAAQ,EAAE;AACRlB,IAAAA,MAAM,EAAE,EADA;AAERQ,IAAAA,KAAK,EAAE,EAFC;AAGRiB,IAAAA,YAAY,EAAE,KAAK,CAHX;AAIRC,IAAAA,WAAW,EAAE,CAJL;AAKRC,IAAAA,WAAW,EAAE,MALL;AAMRX,IAAAA,UAAU,EAAE,EANJ;AAORY,IAAAA,WAAW,EAAE,MAPL;AAQRC,IAAAA,YAAY,EAAE;AACVrB,MAAAA,KAAK,EAAE,CADG;AAEVR,MAAAA,MAAM,EAAE;AAFE,KARN;AAYR8B,IAAAA,aAAa,EAAE,GAZP;AAaRC,IAAAA,YAAY,EAAE;AAbN,GADqB;AAgB/BjC,EAAAA,SAAS,EAAE;AACTkC,IAAAA,IAAI,EAAE,CADG;AAET9B,IAAAA,cAAc,EAAE,QAFP;AAGT+B,IAAAA,SAAS,EAAE,QAHF;AAIT9B,IAAAA,UAAU,EAACnB,QAAQ,CAACkD,GAAT,GAAc,EAAd,GAAiB,CAJnB;AAKVpB,IAAAA,eAAe,EAAE,OALP;AAMTqB,IAAAA,OAAO,EAAE;AANA,GAhBoB;AAwB/BpC,EAAAA,gBAAgB,EAAE;AAChBgB,IAAAA,KAAK,EAAE,MADS;AAEhBL,IAAAA,QAAQ,EAAC;AAFO;AAxBa,CAAlB,CAAf","sourcesContent":["import react, { useState } from \"react\";\r\nimport {\r\n  SafeAreaView,\r\n  BackHandler,\r\n  Alert,\r\n  View,\r\n  StatusBar,\r\n  Linking,\r\n  AppState,\r\n  ActivityIndicator,\r\n  Button,\r\n  TouchableOpacity,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Slider } from \"./Slider\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { BoxHelper } from \"../../Style/BoxHelper\";\r\nimport { ScrollView, Text, Image, StyleSheet } from \"react-native\";\r\nimport SearchBar from \"react-native-dynamic-search-bar\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { NativeScreenNavigationContainer } from \"react-native-screens\";\r\nimport * as Location from \"expo-location\";\r\nimport Spinner from \"react-native-loading-spinner-overlay\";\r\nimport Geocoder from \"react-native-geocoding\";\r\nimport GoogleApi from \"../Mapsource/GoogleApi\";\r\nimport { firebase } from \"../firebaseConfig/Config\";\r\nexport const FrontScreen = ({ user, navigation, ...props }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [displayCurrentAddress, setDisplayCurrentAddress] = useState(\r\n    \"Wait, we are fetching you location...\"\r\n  );\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [locationServiceEnabled, setLocationServiceEnabled] = useState(false);\r\n  const [location, setLocation] = useState();\r\n  const [colo, setColo] = useState(\"black\");\r\n  const [geeti, setGeeti] = useState();\r\n\r\n  let userToken;\r\n  useEffect(async() => {\r\n    setLoading(true);\r\n    userToken = await AsyncStorage.getItem(\"xyz\");\r\n    console.log(\"hello itsewddv profile\", userToken);\r\n    getLocation();\r\n    CheckIfLocationEnabled();\r\n  \r\n    console.log(\"opned\");\r\n    BackHandler.addEventListener(\"hardwareBackPress\", backAction);\r\n\r\n    return () =>\r\n      BackHandler.removeEventListener(\"hardwareBackPress\", backAction);\r\n  }, []);\r\n\r\n    \r\n \r\n\r\n  //Get Location Name\r\n  const getNameLocation = () => {\r\n    console.log(\"API : \", GoogleApi.Google_Api);\r\n    Geocoder.init(\"AIzaSyD8P1F_dvcvHh_BNsBlgP-kHxUClIgyWrY\");\r\n    Geocoder.from(location.latitude, location.longitude)\r\n      .then((json) => {\r\n        var address_Component = json.results[0].formatted_address;\r\n        console.log(address_Component);\r\n        setGeeti(address_Component);\r\n        setColo(\"green\");\r\n      })\r\n      .catch((error) => console.warn(error));\r\n  };\r\n\r\n  const getLocation = async () => {\r\n    try {\r\n      const { granted } = await Location.requestForegroundPermissionsAsync();\r\n      if (!granted) return;\r\n      const {\r\n        coords: { latitude, longitude },\r\n      } = await Location.getCurrentPositionAsync();\r\n\r\n      setLocation({\r\n        latitude: Number(latitude),\r\n        longitude: Number(longitude),\r\n        latitudeDelta: 0.000212699887515984465,\r\n        longitudeDelta: 0.000999999,\r\n      });\r\n      Geocoder.init(\"AIzaSyD8P1F_dvcvHh_BNsBlgP-kHxUClIgyWrY\");\r\n      Geocoder.from(latitude,longitude)\r\n        .then((json) => {\r\n          var address_Component = json.results[0].formatted_address;\r\n          console.log(address_Component);\r\n          setGeeti(address_Component);\r\n          setColo(\"green\");\r\n        })\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n  console.log(\"Its current location ff\", location);\r\n\r\n  const openSetting = () => {\r\n    if (Platform.OS == \"ios\") {\r\n      Linking.openURL(\"App-Prefs:Privacy&path=LOCATION\");\r\n      setVisible(false);\r\n    // } else {\r\n    //   IntentLauncherAndroid.startActivityAsync(\r\n    //     IntentLauncherAndroid.ACTION_LOCATION_SOURCE_SETTINGS\r\n    //   );\r\n    }\r\n  };\r\n\r\n  const CheckIfLocationEnabled = async () => {\r\n    let enabled = await Location.hasServicesEnabledAsync();\r\n\r\n    if (!enabled) {\r\n      Alert.alert(\r\n        \"Location Service not enabled\",\r\n        \"Please enable your location services to continue\",\r\n        [\r\n          {\r\n            text: \"OK\",\r\n            onPress: () => openSetting(),\r\n          },\r\n          { text: \"Cancel\" },\r\n        ],\r\n\r\n        { cancelable: false }\r\n      );\r\n    } else {\r\n      setLocationServiceEnabled(enabled);\r\n    }\r\n  };\r\n\r\n  const backAction = () => {\r\n    Alert.alert(\r\n      \"Hold on!\",\r\n      \"Are you sure you want to close this application?\",\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => null,\r\n          style: \"cancel\",\r\n        },\r\n        { text: \"YES\", onPress: () => BackHandler.exitApp() },\r\n      ]\r\n    );\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n        <StatusBar barStyle=\"dark-content\" />\r\n\r\n        <View style={styles.container}>\r\n          <Spinner\r\n            //visibility of Overlay Loading Spinner\r\n            visible={loading}\r\n            //Text with the Spinner\r\n             textContent={'Getting Location...'}\r\n            //Text style of the Spinner Text\r\n            textStyle={styles.spinnerTextStyle}\r\n          />\r\n          <View\r\n            style={{\r\n              height: 60,\r\n              flexDirection: \"row\",\r\n              justifyContent: \"space-between\",\r\n              paddingTop: 13,\r\n              paddingLeft: 17,\r\n              paddingRight: 15,\r\n            alignItems: \"baseline\",\r\n              marginTop:Platform.OS==\"ios\"? 40:25,\r\n            }}\r\n          >\r\n            <Text\r\n              style={{\r\n                width: \"90%\",\r\n                alignSelf: \"baseline\",\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n              }}\r\n            >\r\n              {geeti}\r\n            </Text>\r\n            <TouchableOpacity onPress={getLocation} >\r\n              <Ionicons\r\n                style={{ position: \"relative\"}}\r\n                name=\"location\"\r\n                size={27}\r\n                color={colo}\r\n              />\r\n            </TouchableOpacity>\r\n          </View>\r\n          <View>\r\n            <SearchBar\r\n              style={{ width: \"95%\" }}\r\n              fontColor=\"#c6c6c6\"\r\n              iconColor=\"#c6c6c6\"\r\n              shadowColor=\"#282828\"\r\n              cancelIconColor=\"#c6c6c6\"\r\n              //  backgroundColor=\"#353d5e\"\r\n              placeholder={\"Search here\"}\r\n              onFocus={() => navigation.navigate(\"Search\")}\r\n              //  onChangeText={(text) =>filterList(text)}\r\n              onSearchPress={() => console.log(\"Search Icon is pressed\")}\r\n              //  onClearPress={(text) => filterList(text)}\r\n              //   onPress={() => alert(\"onPress\")}\r\n              \r\n            />\r\n        </View>\r\n        <ScrollView showsVerticalScrollIndicator={false} style={{backgroundColor:\"#fff\",marginTop:1}}>\r\n          <View >\r\n            <Slider />\r\n          </View>\r\n          <Text\r\n            onPress={props.onPress}\r\n            style={{\r\n              color: \"gray\",\r\n              fontWeight: \"bold\",\r\n              fontSize: 14,\r\n              marginLeft: 5,\r\n              marginTop: 10,\r\n              marginBottom: 10,\r\n            }}\r\n          >\r\n            RECENTS\r\n          </Text>\r\n          <ScrollView\r\n            horizontal={true}\r\n            showsHorizontalScrollIndicator={false}\r\n            style={{ height: 70 }}\r\n          >\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/carrepair.png\")}\r\n            />\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/electrician.png\")}\r\n            />\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/plumber.png\")}\r\n            />\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/insurance.png\")}\r\n            />\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/teacher.png\")}\r\n            />\r\n            <Image\r\n              style={styles.imgStyle}\r\n              source={require(\"../../assets/HelperImageIcon/fridge.png\")}\r\n            />\r\n          </ScrollView>\r\n\r\n          <Text\r\n            style={{\r\n              color: \"gray\",\r\n              fontWeight: \"bold\",\r\n              fontSize: 14,\r\n              marginLeft: 5,\r\n              marginTop: 20,\r\n            }}\r\n          >\r\n            ALL SERVICES\r\n          </Text>\r\n\r\n          <View style={{ flexDirection: \"row\",height:100,width:\"100%\",justifyContent:'space-around',marginTop:10 }}>\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Electrician\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Electrician\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/electrician.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Plumber\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Plumber\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/plumber.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Car Repair\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Car Repair\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/carrepair.png\")}\r\n            />\r\n          </View>\r\n          <View\r\n            style={{flexDirection: \"row\",height:100,width:\"100%\",justifyContent:'space-around',marginTop:10}}\r\n          >\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Insurance\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Insurance\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/insurance.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Doctor\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Doctor\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/doctor.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Tutor Service\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Tutor Service\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/teacher.png\")}\r\n            />\r\n          </View>\r\n\r\n          <View\r\n            style={{flexDirection: \"row\",height:100,width:\"100%\",justifyContent:'space-around',marginTop:10}}\r\n          >\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Ambulance\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Ambulance\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/ambulance.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Refrigerator Repair\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Refrigerator Repair\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/fridge.png\")}\r\n            />\r\n            <BoxHelper\r\n              onPress={() => {\r\n                navigation.navigate(\"Helpers\", {\r\n                  name: \"Home Repair\",\r\n                  lat: location.latitude,\r\n                  lng: location.longitude,\r\n                });\r\n              }}\r\n              HelperType={\"Home Repair\"}\r\n              imageUri={require(\"../../assets/HelperImageIcon/homereapir.png\")}\r\n            />\r\n          </View>\r\n          </ScrollView>\r\n        </View>\r\n      \r\n    </>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  imgStyle: {\r\n    height: 70,\r\n    width: 70,\r\n    borderRadius: 70 / 2,\r\n    borderWidth: 1,\r\n    borderColor: \"gray\",\r\n    marginLeft: 10,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n        width: 0,\r\n        height: 4,\r\n    },\r\n    shadowOpacity: 0.6,\r\n    shadowRadius: 4.65,\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    textAlign: \"center\",\r\n    paddingTop:Platform.ios? 30:0,\r\n   backgroundColor: \"#ffff\",\r\n    padding: 1,\r\n  },\r\n  spinnerTextStyle: {\r\n    color: \"#FFF\",\r\n    fontSize:15\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
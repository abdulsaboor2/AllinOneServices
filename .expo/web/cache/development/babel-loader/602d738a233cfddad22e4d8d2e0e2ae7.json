{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { PlatformColor } from \"react-native-web/dist/index\";\nimport { TextPropTypes } from \"react-native-web/dist/index\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\nvar COLOR = Platform.OS === \"ios\" ? \"#007ff9\" : \"#169689\";\n\nvar DialogButton = function DialogButton(props) {\n  var label = props.label,\n      _props$color = props.color,\n      color = _props$color === void 0 ? COLOR : _props$color,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      bold = props.bold,\n      onPress = props.onPress,\n      style = props.style,\n      nodeProps = __rest(props, [\"label\", \"color\", \"disabled\", \"bold\", \"onPress\", \"style\"]);\n\n  var fontWeight = bold ? \"600\" : \"normal\";\n\n  var _useTheme = useTheme(buildStyles),\n      styles = _useTheme.styles;\n\n  return React.createElement(TouchableOpacity, {\n    style: [styles.button],\n    onPress: onPress,\n    disabled: disabled\n  }, React.createElement(Text, _extends({\n    style: [styles.text, {\n      color: color,\n      fontWeight: fontWeight\n    }, style]\n  }, nodeProps), label));\n};\n\nDialogButton.propTypes = _extends(_extends({}, TextPropTypes), {\n  label: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  bold: PropTypes.bool,\n  disabled: PropTypes.bool,\n  onPress: PropTypes.func.isRequired\n});\nDialogButton.displayName = \"DialogButton\";\n\nvar buildStyles = function buildStyles(isDark) {\n  return StyleSheet.create({\n    button: Platform.select({\n      ios: {\n        flexGrow: 1,\n        flexShrink: 1,\n        height: 46,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      android: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      web: {\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      default: {}\n    }),\n    text: Platform.select({\n      ios: {\n        color: PlatformColor(\"link\"),\n        textAlign: \"center\",\n        fontSize: 17,\n        backgroundColor: \"transparent\"\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"link_text_dark\" : \"link_text_dark_light\")),\n        textAlign: \"center\",\n        backgroundColor: \"transparent\",\n        padding: 8,\n        fontSize: 14,\n        textTransform: \"uppercase\"\n      },\n      web: {\n        textAlign: \"center\",\n        backgroundColor: \"transparent\",\n        padding: 8,\n        fontSize: 14,\n        textTransform: \"uppercase\"\n      },\n      default: {}\n    })\n  });\n};\n\nexport default DialogButton;","map":{"version":3,"sources":["C:/Users/USER/signupp/node_modules/react-native-dialog/lib/Button.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PlatformColor","TextPropTypes","useTheme","PropTypes","COLOR","Platform","OS","DialogButton","props","label","color","disabled","bold","onPress","style","nodeProps","fontWeight","buildStyles","styles","createElement","TouchableOpacity","button","Text","text","propTypes","string","isRequired","bool","func","displayName","isDark","StyleSheet","create","select","ios","flexGrow","flexShrink","height","justifyContent","alignItems","android","web","default","textAlign","fontSize","backgroundColor","padding","textTransform"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Text, TouchableOpacity, PlatformColor, TextPropTypes, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\nconst COLOR = Platform.OS === \"ios\" ? \"#007ff9\" : \"#169689\";\nconst DialogButton = (props) => {\n    const { label, color = COLOR, disabled = false, bold, onPress, style } = props, nodeProps = __rest(props, [\"label\", \"color\", \"disabled\", \"bold\", \"onPress\", \"style\"]);\n    const fontWeight = bold ? \"600\" : \"normal\";\n    const { styles } = useTheme(buildStyles);\n    return (React.createElement(TouchableOpacity, { style: [styles.button], onPress: onPress, disabled: disabled },\n        React.createElement(Text, Object.assign({ style: [styles.text, { color: color, fontWeight: fontWeight }, style] }, nodeProps), label)));\n};\nDialogButton.propTypes = Object.assign(Object.assign({}, TextPropTypes), { label: PropTypes.string.isRequired, color: PropTypes.string, bold: PropTypes.bool, disabled: PropTypes.bool, onPress: PropTypes.func.isRequired });\nDialogButton.displayName = \"DialogButton\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    button: Platform.select({\n        ios: {\n            flexGrow: 1,\n            flexShrink: 1,\n            height: 46,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        android: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        web: {\n            justifyContent: \"center\",\n            alignItems: \"center\",\n        },\n        default: {},\n    }),\n    text: Platform.select({\n        ios: {\n            color: PlatformColor(\"link\"),\n            textAlign: \"center\",\n            fontSize: 17,\n            backgroundColor: \"transparent\",\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"link_text_dark\" : \"link_text_dark_light\"}`),\n            textAlign: \"center\",\n            backgroundColor: \"transparent\",\n            padding: 8,\n            fontSize: 14,\n            textTransform: \"uppercase\",\n        },\n        web: {\n            textAlign: \"center\",\n            backgroundColor: \"transparent\",\n            padding: 8,\n            fontSize: 14,\n            textTransform: \"uppercase\",\n        },\n        default: {},\n    }),\n});\nexport default DialogButton;\n"]},"metadata":{},"sourceType":"module"}
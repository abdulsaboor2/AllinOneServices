{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Boton } from \"../Style/Boton\";\nimport { useState } from \"react\";\nimport ImagePikker from \"./ImagePikker\";\nimport { firebase } from \"./Config\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { useEffect } from \"react\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { GooglePlacesAutocomplete } from 'react-native-google-places-autocomplete';\nimport GoogleApi from \"../assets/GoogleApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var EditProfile = function EditProfile(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      fullName = _useState2[0],\n      setFullname = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      Address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      phone = _useState8[0],\n      setPhone = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loading = _useState10[0],\n      setloading = _useState10[1];\n\n  var _useState11 = useState(\"eye-off\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      eye = _useState12[0],\n      setEye = _useState12[1];\n\n  var _useState13 = useState(true),\n      _useState14 = _slicedToArray(_useState13, 2),\n      visible = _useState14[0],\n      setVisible = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      visible2 = _useState16[0],\n      setVisible2 = _useState16[1];\n\n  var _useState17 = useState('gray'),\n      _useState18 = _slicedToArray(_useState17, 2),\n      color = _useState18[0],\n      setColor = _useState18[1];\n\n  var _useState19 = useState('gray'),\n      _useState20 = _slicedToArray(_useState19, 2),\n      color2 = _useState20[0],\n      setColor2 = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      imge = _useState22[0],\n      setImge = _useState22[1];\n\n  var _useState23 = useState(null),\n      _useState24 = _slicedToArray(_useState23, 2),\n      fnValid = _useState24[0],\n      setFnValid = _useState24[1];\n\n  var _useState25 = useState(null),\n      _useState26 = _slicedToArray(_useState25, 2),\n      lnValid = _useState26[0],\n      setLnValid = _useState26[1];\n\n  var _useState27 = useState(null),\n      _useState28 = _slicedToArray(_useState27, 2),\n      emailValid = _useState28[0],\n      setEmailValid = _useState28[1];\n\n  var _useState29 = useState(null),\n      _useState30 = _slicedToArray(_useState29, 2),\n      phoneValid = _useState30[0],\n      setPhoneValid = _useState30[1];\n\n  var _useState31 = useState(null),\n      _useState32 = _slicedToArray(_useState31, 2),\n      AddressValid = _useState32[0],\n      setAddressValid = _useState32[1];\n\n  var _useState33 = useState(false),\n      _useState34 = _slicedToArray(_useState33, 2),\n      isValid = _useState34[0],\n      setIsValid = _useState34[1];\n\n  var emailRegex = /\\S+@\\S+\\.\\S+/;\n  console.log(setAddress);\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setloading(true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('xyz'));\n\n          case 3:\n            userToken = _context.sent;\n            console.log(\"hello its profile\", userToken);\n            firebase.firestore().collection('Users').doc(userToken).get().then(function (doc) {\n              if (doc.exists) {\n                console.log(\"Document data:\", doc.data());\n                var data = doc.data();\n                setFullname(data.fullName);\n                setEmail(data.email);\n                setPhone(data.phone);\n                setAddress(data.Address);\n                setloading(false);\n              } else {\n                console.log(\"No such document!\");\n              }\n            }).catch(function (error) {\n              console.log(\"Error getting document:\", error);\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var updateUser = function updateUser() {\n    setloading(true);\n    firebase.firestore().collection('Users').doc(userToken).set({\n      fullName: fullName,\n      email: email,\n      phone: phone,\n      Address: Address\n    }).then(function (docRef) {\n      navigation.goBack();\n      setloading(false);\n    }).catch(function (error) {\n      console.error(\"Error: \", error);\n      setloading(false);\n    });\n  };\n\n  if (loading) {\n    return _jsx(View, {\n      style: {\n        justifyContent: 'center',\n        flex: 1\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"gray\"\n      })\n    });\n  }\n\n  var validateEmail = function validateEmail() {\n    if (emailRegex.test(email)) {\n      setIsValid(true);\n    } else {\n      setIsValid(false);\n      setEmailValid('Please enter a valid email!');\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontSize: 35,\n        marginTop: 20,\n        marginLeft: 20,\n        color: \"#1976d2\",\n        fontWeight: \"bold\"\n      },\n      children: \"Edit Profile\"\n    }), _jsxs(ScrollView, {\n      keyboardShouldPersistTaps: \"handled\",\n      children: [_jsx(View, {\n        style: styles.margin,\n        children: _jsx(ImagePikker, {\n          img: fullName\n        })\n      }), _jsxs(View, {\n        style: {\n          padding: 30\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            fontSize: 16,\n            color: 'black',\n            borderBottomColor: fullName == \"\" ? \"#ddd\" : color || color,\n            borderBottomWidth: 1,\n            paddingBottom: 10\n          },\n          placeholder: \"Enter Name\",\n          value: fullName,\n          onChangeText: function onChangeText(t1) {\n            setFullname(t1);\n            setFnValid(\"\");\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: fnValid\n        })]\n      }), _jsxs(View, {\n        style: {\n          paddingLeft: 30,\n          paddingRight: 30,\n          paddingBottom: 30\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            fontSize: 16,\n            color: 'black',\n            borderBottomColor: email == \"\" ? \"#ddd\" : 'green',\n            borderBottomWidth: 1,\n            paddingBottom: 10\n          },\n          placeholder: \"Email\",\n          keyboardType: \"email-address\",\n          value: email,\n          onChangeText: function onChangeText(t4) {\n            setEmail(t4);\n            setEmailValid(\"\");\n          },\n          onChange: validateEmail\n        }), _jsx(Text, {\n          style: {\n            color: \"red\"\n          },\n          children: emailValid\n        })]\n      }), _jsxs(View, {\n        style: {\n          paddingLeft: 30,\n          paddingRight: 30,\n          paddingBottom: 30\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            fontSize: 16,\n            color: 'black',\n            borderBottomColor: phone == \"\" ? \"#ddd\" : 'green',\n            borderBottomWidth: 1,\n            paddingBottom: 10\n          },\n          placeholder: \"Phone\",\n          keyboardType: \"phone-pad\",\n          value: phone,\n          onChangeText: function onChangeText(t5) {\n            setPhone(t5);\n            setPhoneValid(\"\");\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"red\",\n            marginTop: 6.5\n          },\n          children: phoneValid\n        })]\n      }), _jsxs(View, {\n        style: {\n          paddingLeft: 30,\n          paddingRight: 30,\n          paddingBottom: 30\n        },\n        children: [_jsx(TextInput, {\n          style: {\n            fontSize: 16,\n            color: 'black',\n            borderBottomColor: Address == \"\" ? \"#ddd\" : 'green',\n            borderBottomWidth: 1,\n            paddingBottom: 10\n          },\n          placeholder: \"Address: Street no 6\",\n          value: Address,\n          onChangeText: function onChangeText(t6) {\n            setAddress(t6);\n            setAddressValid(\"\");\n          }\n        }), _jsx(Text, {\n          style: {\n            color: \"red\",\n            marginTop: 6.5\n          },\n          children: AddressValid\n        })]\n      }), _jsx(View, {\n        style: styles.margin,\n        children: _jsx(Boton, {\n          onPress: updateUser,\n          title: \"Update\",\n          widt: 200\n        })\n      }), _jsx(View, {\n        style: {\n          height: 200\n        }\n      }), _jsx(TouchableOpacity, {\n        children: _jsx(Text, {\n          style: {\n            fontSize: 17,\n            textAlign: 'center',\n            color: 'red',\n            marginBottom: 15\n          },\n          children: \"Delete Account\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  },\n  margin: {\n    marginTop: 25,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/EditProfile.js"],"names":["Boton","useState","ImagePikker","firebase","Ionicons","useEffect","AsyncStorage","GooglePlacesAutocomplete","GoogleApi","EditProfile","navigation","fullName","setFullname","email","setEmail","Address","setAddress","phone","setPhone","loading","setloading","eye","setEye","visible","setVisible","visible2","setVisible2","color","setColor","color2","setColor2","imge","setImge","fnValid","setFnValid","lnValid","setLnValid","emailValid","setEmailValid","phoneValid","setPhoneValid","AddressValid","setAddressValid","isValid","setIsValid","emailRegex","console","log","getItem","userToken","firestore","collection","doc","get","then","exists","data","catch","error","updateUser","set","docRef","goBack","justifyContent","flex","validateEmail","test","styles","container","fontSize","marginTop","marginLeft","fontWeight","margin","padding","borderBottomColor","borderBottomWidth","paddingBottom","t1","paddingLeft","paddingRight","t4","t5","t6","height","textAlign","marginBottom","StyleSheet","create","backgroundColor","alignItems"],"mappings":"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","sourcesContent":["import { TouchableOpacity, View } from \"react-native\";\r\nimport { ScrollView,StyleSheet,Text,TextInput,Image,ActivityIndicator  } from \"react-native\";\r\nimport { Boton } from \"../Style/Boton\";\r\nimport { useState } from \"react\";\r\nimport ImagePikker from \"./ImagePikker\";\r\nimport { firebase } from \"./Config\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { useEffect } from \"react\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { GooglePlacesAutocomplete} from 'react-native-google-places-autocomplete';\r\nimport GoogleApi from \"../assets/GoogleApi\";\r\n\r\n\r\nexport const EditProfile = ({navigation}) => {\r\n\r\n\r\n   const [fullName, setFullname] = useState('');\r\n   const [email, setEmail] = useState('');\r\n   const [Address, setAddress] = useState('');\r\n   const [phone, setPhone] = useState('');\r\n   const [loading, setloading] = useState(false);\r\n    \r\n    const [eye, setEye] = useState(\"eye-off\");\r\n    const [visible,setVisible]=useState(true)\r\n  \r\n    const [visible2, setVisible2] = useState(true)\r\n    const [color, setColor] = useState('gray');\r\n    const [color2,setColor2]=useState('gray');\r\n    const [imge,setImge]=useState(\"\")\r\n\r\n   const [fnValid, setFnValid] = useState(null);\r\n   const [lnValid, setLnValid] = useState(null);\r\n   const [emailValid, setEmailValid] = useState(null);\r\n   const [phoneValid, setPhoneValid] = useState(null);\r\n   const [AddressValid, setAddressValid] = useState(null);\r\n   const [isValid, setIsValid] = useState(false);\r\n   const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    \r\n  console.log(setAddress)\r\n  \r\n   useEffect(async () => {\r\n    setloading(true)\r\n    userToken = await AsyncStorage.getItem('xyz')\r\n    console.log(\"hello its profile\",userToken);\r\n    firebase.firestore().collection('Users').doc(userToken).get().then((doc) => {\r\n      if (doc.exists) {\r\n          \r\n          console.log(\"Document data:\", doc.data());\r\n          const data = doc.data()\r\n        //  setToken(data)\r\n           setFullname(data.fullName)\r\n            setEmail(data.email)\r\n            setPhone(data.phone)\r\n        setAddress(data.Address)\r\n        setloading(false)\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      }).catch((error) => {\r\n        console.log(\"Error getting document:\", error);\r\n      });\r\n  }, []);\r\n \r\n  const updateUser=()=> {\r\n   \r\n      setloading(true);\r\n   firebase.firestore().collection('Users').doc(userToken).set({\r\n      fullName: fullName,\r\n      email: email,\r\n        phone: phone,\r\n      Address:Address\r\n    }).then((docRef) => {\r\n      \r\n        navigation.goBack();\r\n        setloading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error: \", error);\r\n      setloading(false);\r\n    });\r\n  }\r\n\r\n\r\n    \r\n\r\n\r\n    if (loading) {\r\n        return <View style={{ justifyContent: 'center',flex:1 }}>\r\n        <ActivityIndicator size=\"large\" color=\"gray\"  />\r\n        </View>\r\n    }\r\n    \r\n    const validateEmail = () => {\r\n        if (emailRegex.test(email)) {\r\n          setIsValid(true);\r\n        } else {\r\n          setIsValid(false);\r\n          setEmailValid('Please enter a valid email!');\r\n        }\r\n      };\r\n    \r\n      \r\n        \r\n        \r\n                    \r\n  return (\r\n    \r\n    <View style={styles.container}>\r\n      \r\n            <Text style={{fontSize: 35,marginTop:20,marginLeft:20, color:\"#1976d2\",fontWeight:\"bold\"}}>Edit Profile</Text>\r\n            <ScrollView keyboardShouldPersistTaps=\"handled\">\r\n                <View style={styles.margin}>\r\n                    <ImagePikker img={fullName}/>\r\n                </View>\r\n                <View style={{padding:30}}>\r\n                    <TextInput\r\n                 style={{fontSize: 16, color: 'black', borderBottomColor:fullName==\"\"?\"#ddd\":color||color, borderBottomWidth:1,paddingBottom:10}}\r\n                        placeholder=\"Enter Name\"\r\n                        value={fullName}\r\n                        onChangeText={t1 => {\r\n                            setFullname(t1)\r\n                            setFnValid(\"\");\r\n                        }}\r\n\r\n                        //onPress={(fullName)=>{fullName==\"\"?setColor(\"red\"):setColor(\"blue\")}}\r\n                       // onPress={text==\"\"?error:\"#ddd\"}\r\n\r\n                    />\r\n                    <Text style={{color:\"red\"}}>{fnValid}</Text>\r\n                </View>\r\n                <View style={{paddingLeft:30,paddingRight:30,paddingBottom:30}}>\r\n                 <TextInput\r\n                style={{ fontSize: 16, color: 'black', borderBottomColor:email==\"\"?\"#ddd\":'green', borderBottomWidth:1,paddingBottom:10}}\r\n                        placeholder=\"Email\"\r\n                        keyboardType='email-address'\r\n                        value={email}\r\n                        onChangeText={t4 => {\r\n                            setEmail(t4)\r\n                            setEmailValid(\"\");\r\n                        }}\r\n                        onChange={validateEmail}\r\n                        \r\n                    />\r\n                    <Text style={{color:\"red\"}}>{emailValid}</Text>\r\n                </View>\r\n                <View style={{paddingLeft:30,paddingRight:30,paddingBottom:30}}>\r\n                <TextInput\r\n                style={{ fontSize: 16, color: 'black', borderBottomColor:phone==\"\"?\"#ddd\":'green', borderBottomWidth:1,paddingBottom:10}}\r\n                        placeholder=\"Phone\"\r\n                        keyboardType=\"phone-pad\"\r\n                        value={phone}\r\n                        onChangeText={t5 => {\r\n                            setPhone(t5)\r\n                            setPhoneValid(\"\");\r\n                        }}\r\n                    />\r\n                   \r\n                    <Text style={{color:\"red\",marginTop:6.5}}>{phoneValid}</Text>\r\n                </View>\r\n                <View style={{paddingLeft:30,paddingRight:30,paddingBottom:30}}>\r\n                <TextInput\r\n                style={{ fontSize: 16, color: 'black', borderBottomColor:Address==\"\"?\"#ddd\":'green', borderBottomWidth:1,paddingBottom:10}}\r\n                        placeholder=\"Address: Street no 6\"\r\n                        value={Address}\r\n                       \r\n                        onChangeText={t6 => {\r\n                            setAddress(t6)\r\n                            setAddressValid(\"\");\r\n                        }}\r\n                  />\r\n          \r\n                    \r\n                    <Text style={{color:\"red\",marginTop:6.5}}>{AddressValid}</Text>\r\n        </View>\r\n        \r\n\r\n\r\n       \r\n                   <View style={styles.margin}>\r\n                    <Boton onPress={updateUser} title={\"Update\"} widt={200} />\r\n                    \r\n        </View>\r\n        \r\n        <View style={{ height: 200 }}></View>\r\n        <TouchableOpacity>\r\n          <Text style={{ fontSize: 17, textAlign: 'center', color: 'red', marginBottom: 15 }}>Delete Account</Text>\r\n          </TouchableOpacity>\r\n      </ScrollView>\r\n      \r\n      \r\n        </View>\r\n    )\r\n\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: \"#fff\"\r\n    \r\n      \r\n    },\r\n    margin: {\r\n        marginTop: 25,\r\n        justifyContent: \"center\",\r\n        alignItems:\"center\"\r\n    },\r\n\r\n   \r\n  });\r\n  "]},"metadata":{},"sourceType":"module"}
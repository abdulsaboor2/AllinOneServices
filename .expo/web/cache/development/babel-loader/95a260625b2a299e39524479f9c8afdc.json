{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { PlatformColor } from \"react-native-web/dist/index\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\n\nvar DialogInput = function DialogInput(props) {\n  var label = props.label,\n      style = props.style,\n      wrapperStyle = props.wrapperStyle,\n      textInputRef = props.textInputRef,\n      multiline = props.multiline,\n      numberOfLines = props.numberOfLines,\n      nodeProps = __rest(props, [\"label\", \"style\", \"wrapperStyle\", \"textInputRef\", \"multiline\", \"numberOfLines\"]);\n\n  var lines = multiline && numberOfLines || 1;\n  var height = 18 + Platform.select({\n    ios: 14,\n    android: 22,\n    default: 0\n  }) * lines;\n\n  var _useTheme = useTheme(buildStyles),\n      styles = _useTheme.styles,\n      isDark = _useTheme.isDark;\n\n  return React.createElement(View, {\n    style: [styles.textInputWrapper, wrapperStyle]\n  }, label && React.createElement(Text, {\n    style: styles.label\n  }, label), React.createElement(TextInput, _extends({\n    ref: textInputRef,\n    placeholderTextColor: Platform.OS === \"ios\" ? PlatformColor(\"placeholderText\") : PlatformColor(\"@android:color/\" + (isDark ? \"hint_foreground_dark\" : \"hint_foreground_light\")),\n    underlineColorAndroid: PlatformColor(\"@android:color/\" + (isDark ? \"hint_foreground_dark\" : \"hint_foreground_light\")),\n    style: [styles.textInput, style, {\n      height: height\n    }],\n    multiline: multiline,\n    numberOfLines: numberOfLines\n  }, nodeProps)));\n};\n\nDialogInput.propTypes = _extends(_extends({}, ViewPropTypes), {\n  label: PropTypes.string,\n  textInputRef: PropTypes.any,\n  wrapperStyle: ViewPropTypes.style,\n  numberOfLines: PropTypes.number,\n  multiline: PropTypes.bool,\n  style: Text.propTypes.style\n});\nDialogInput.displayName = \"DialogInput\";\n\nvar buildStyles = function buildStyles(isDark) {\n  return StyleSheet.create({\n    textInputWrapper: Platform.select({\n      ios: {\n        backgroundColor: PlatformColor(\"systemGray5\"),\n        borderWidth: StyleSheet.hairlineWidth,\n        borderRadius: 6,\n        borderColor: PlatformColor(\"separator\"),\n        marginHorizontal: 20,\n        marginBottom: 20,\n        paddingHorizontal: 8\n      },\n      android: {\n        marginHorizontal: 10,\n        marginBottom: 20\n      },\n      default: {}\n    }),\n    label: Platform.select({\n      ios: {\n        color: PlatformColor(\"label\")\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"primary_text_dark\" : \"primary_text_light\")),\n        fontSize: 14\n      },\n      default: {}\n    }),\n    textInput: Platform.select({\n      ios: {\n        color: PlatformColor(\"label\")\n      },\n      android: {\n        color: PlatformColor(\"@android:color/\" + (isDark ? \"primary_text_dark\" : \"primary_text_light\")),\n        marginLeft: -4,\n        paddingLeft: 4\n      },\n      default: {}\n    })\n  });\n};\n\nexport default DialogInput;","map":{"version":3,"sources":["C:/Users/USER/signupp/node_modules/react-native-dialog/lib/Input.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PlatformColor","ViewPropTypes","useTheme","PropTypes","DialogInput","props","label","style","wrapperStyle","textInputRef","multiline","numberOfLines","nodeProps","lines","height","Platform","select","ios","android","default","buildStyles","styles","isDark","createElement","View","textInputWrapper","Text","TextInput","ref","placeholderTextColor","OS","underlineColorAndroid","textInput","propTypes","string","any","number","bool","displayName","StyleSheet","create","backgroundColor","borderWidth","hairlineWidth","borderRadius","borderColor","marginHorizontal","marginBottom","paddingHorizontal","color","fontSize","marginLeft","paddingLeft"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from \"react\";\nimport { Platform, StyleSheet, Text, TextInput, View, PlatformColor, ViewPropTypes, } from \"react-native\";\nimport useTheme from \"./useTheme\";\nimport PropTypes from \"prop-types\";\nconst DialogInput = (props) => {\n    const { label, style, wrapperStyle, textInputRef, multiline, numberOfLines } = props, nodeProps = __rest(props, [\"label\", \"style\", \"wrapperStyle\", \"textInputRef\", \"multiline\", \"numberOfLines\"]);\n    const lines = (multiline && numberOfLines) || 1;\n    const height = 18 + Platform.select({ ios: 14, android: 22, default: 0 }) * lines;\n    const { styles, isDark } = useTheme(buildStyles);\n    return (React.createElement(View, { style: [styles.textInputWrapper, wrapperStyle] },\n        label && React.createElement(Text, { style: styles.label }, label),\n        React.createElement(TextInput, Object.assign({ ref: textInputRef, placeholderTextColor: Platform.OS === \"ios\"\n                ? PlatformColor(\"placeholderText\")\n                : PlatformColor(`@android:color/${isDark ? \"hint_foreground_dark\" : \"hint_foreground_light\"}`), underlineColorAndroid: PlatformColor(`@android:color/${isDark ? \"hint_foreground_dark\" : \"hint_foreground_light\"}`), style: [styles.textInput, style, { height }], multiline: multiline, numberOfLines: numberOfLines }, nodeProps))));\n};\nDialogInput.propTypes = Object.assign(Object.assign({}, ViewPropTypes), { label: PropTypes.string, textInputRef: PropTypes.any, wrapperStyle: ViewPropTypes.style, numberOfLines: PropTypes.number, multiline: PropTypes.bool, style: Text.propTypes.style });\nDialogInput.displayName = \"DialogInput\";\nconst buildStyles = (isDark) => StyleSheet.create({\n    textInputWrapper: Platform.select({\n        ios: {\n            backgroundColor: PlatformColor(\"systemGray5\"),\n            borderWidth: StyleSheet.hairlineWidth,\n            borderRadius: 6,\n            borderColor: PlatformColor(\"separator\"),\n            marginHorizontal: 20,\n            marginBottom: 20,\n            paddingHorizontal: 8,\n        },\n        android: {\n            marginHorizontal: 10,\n            marginBottom: 20,\n        },\n        default: {},\n    }),\n    label: Platform.select({\n        ios: {\n            color: PlatformColor(\"label\"),\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n            fontSize: 14,\n        },\n        default: {},\n    }),\n    textInput: Platform.select({\n        ios: {\n            color: PlatformColor(\"label\"),\n        },\n        android: {\n            color: PlatformColor(`@android:color/${isDark ? \"primary_text_dark\" : \"primary_text_light\"}`),\n            marginLeft: -4,\n            paddingLeft: 4,\n        },\n        default: {},\n    }),\n});\nexport default DialogInput;\n"]},"metadata":{},"sourceType":"module"}
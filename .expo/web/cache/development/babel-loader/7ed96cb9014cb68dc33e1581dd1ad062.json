{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport View from \"../../exports/View\";\nimport React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UnimplementedView = function (_React$Component) {\n  _inherits(UnimplementedView, _React$Component);\n\n  var _super = _createSuper(UnimplementedView);\n\n  function UnimplementedView() {\n    _classCallCheck(this, UnimplementedView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(UnimplementedView, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsx(View, {\n        style: [unimplementedViewStyles, this.props.style],\n        children: this.props.children\n      });\n    }\n  }]);\n\n  return UnimplementedView;\n}(React.Component);\n\nvar unimplementedViewStyles = process.env.NODE_ENV !== 'production' ? {\n  alignSelf: 'flex-start',\n  borderColor: 'red',\n  borderWidth: 1\n} : {};\nexport default UnimplementedView;","map":{"version":3,"sources":["C:/Users/USER/signupp/node_modules/react-native-web/src/modules/UnimplementedView/index.js"],"names":["View","React","UnimplementedView","unimplementedViewStyles","props","style","children","Component","process","env","NODE_ENV","alignSelf","borderColor","borderWidth"],"mappings":";;;;;;;;;;AAWA,OAAOA,IAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;IAKMC,iB;;;;;;;;;;;;;WACJ,0BAAiB,CAEhB;;;WAED,kBAAe;AACb,aAAO,KAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACC,uBAAD,EAA0B,KAAKC,KAAL,CAAWC,KAArC,CAAb;AAAA,kBAA2D,KAAKD,KAAL,CAAWE;AAAtE,QAAP;AACD;;;;EAP6BL,KAAK,CAACM,S;;AAUtC,IAAMJ,uBAAuB,GAC3BK,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GACI;AACEC,EAAAA,SAAS,EAAE,YADb;AAEEC,EAAAA,WAAW,EAAE,KAFf;AAGEC,EAAAA,WAAW,EAAE;AAHf,CADJ,GAMI,EAPN;AASA,eAAeX,iBAAf","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type { Node } from 'React';\n\nimport View from '../../exports/View';\nimport React from 'react';\n\n/**\n * Common implementation for a simple stubbed view.\n */\nclass UnimplementedView extends React.Component<*, *> {\n  setNativeProps() {\n    // Do nothing.\n  }\n\n  render(): Node {\n    return <View style={[unimplementedViewStyles, this.props.style]}>{this.props.children}</View>;\n  }\n}\n\nconst unimplementedViewStyles =\n  process.env.NODE_ENV !== 'production'\n    ? {\n        alignSelf: 'flex-start',\n        borderColor: 'red',\n        borderWidth: 1\n      }\n    : {};\n\nexport default UnimplementedView;\n"]},"metadata":{},"sourceType":"module"}
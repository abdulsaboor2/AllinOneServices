{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport { HomeScreen } from \"./Components/FirstHomeScreen/HomeScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { FrontScreen } from \"./Components/HomeScreen/FrontScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Settingprof } from \"./Components/ProfileScreens/Settingprof\";\nimport { Payment } from \"./Components/ProfileScreens/Payment\";\nimport { useState } from \"react\";\nimport { ChangePassword } from \"./Components/ProfileScreens/ChangePassword\";\nimport { ForgotPassword } from \"./Components/ProfileScreens/ForgotPassword\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from \"react\";\nimport { Reducer } from \"react\";\nimport { MapScreen } from \"./Components/Mapsource/MapScreen\";\nimport { MapDirection } from \"./Components/Mapsource/MapDirection\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { HelperListNearbye } from \"./Components/HomeScreen/HelperListNearbye\";\nimport { ChatScreen } from \"./Components/ChatScreen/ChatScreen\";\nimport { HelperChat } from \"./Components/ChatScreen/HelperChat\";\nimport Pay from \"./Components/Pay\";\nimport { Helper_Profile } from \"./Components/ProfileScreens/Helper_Profile\";\nimport { HelperHomeScreen } from \"./Components/HelperScr/HelperHomeScreen/HelperHomeScreen\";\nimport { SearchScreen } from \"./Components/HomeScreen/SearchScreen\";\nimport { FeedBack } from \"./Components/HomeScreen/FeedBack\";\nimport LoginScreen from \"./Components/LoginScreen/LoginScreen\";\nimport SignupScreen from \"./Components/SignupScreen/SignupScreen\";\nimport PictureView from \"./Components/ProfileScreens/PictureView\";\nimport ProfileEdit from \"./Components/ProfileScreens/ProfileEdit\";\nimport TermCondition from \"./Components/ProfileScreens/TermCondition\";\nimport Video from \"./Components/ProfileScreens/Video\";\nimport AboutUs from \"./Components/SignupScreen/AboutUs\";\nimport { Notifications } from \"./Components/Notification/Notifications\";\nimport { NotiData } from \"./Style/NotiDtata\";\nimport NotiDetail from \"./Components/Notification/NotiDetail\";\nimport HelperProfileEdit from \"./Components/ProfileScreens/HelperProfileEdit\";\nimport HelperMapScreen from \"./Components/HelperScr/HelperMapScreen/HelperMapScreen\";\nimport { HelperMapView } from \"./Components/HelperScr/HelperMapScreen/HelperMapView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\nexport default function App() {\n  var Tab = createBottomTabNavigator();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      val = _useState2[0],\n      setVal = _useState2[1];\n\n  function Home() {\n    return _jsx(Stack.Navigator, {\n      children: _jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"FrontScreen\",\n          component: FrontScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Map Screen\",\n          component: MapScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Helpers\",\n          component: HelperListNearbye\n        }), _jsx(Stack.Screen, {\n          name: \"Chat\",\n          component: ChatScreen\n        }), _jsx(Stack.Screen, {\n          name: \"Search\",\n          component: SearchScreen,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Feed Back\",\n          component: FeedBack,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"pay\",\n          component: Pay,\n          options: {\n            headerShown: false\n          }\n        })]\n      })\n    });\n  }\n\n  function Notification() {\n    return _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Notifications\",\n        component: Notifications\n      }), _jsx(Stack.Screen, {\n        name: \"Detail\",\n        component: NotiDetail\n      })]\n    });\n  }\n\n  function Chat() {\n    return _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Halper Chat\",\n        component: HelperChat\n      }), _jsx(Stack.Screen, {\n        name: \"Chat \",\n        component: ChatScreen\n      })]\n    });\n  }\n\n  function Profile(_ref) {\n    var route = _ref.route;\n    return _jsx(Stack.Navigator, {\n      children: _jsxs(Stack.Group, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Profil\",\n          component: Settingprof\n        }), _jsx(Stack.Screen, {\n          name: \"Payment\",\n          component: Payment\n        }), _jsx(Stack.Screen, {\n          name: \"Change Password\",\n          component: ChangePassword\n        }), _jsx(Stack.Screen, {\n          name: \"Forgot Password\",\n          component: ForgotPassword\n        }), _jsx(Stack.Screen, {\n          name: \"Edite\",\n          component: ProfileEdit\n        }), _jsx(Stack.Screen, {\n          name: \"PictureView\",\n          component: PictureView\n        }), _jsx(Stack.Screen, {\n          name: \"Term and Condition\",\n          component: TermCondition\n        }), _jsx(Stack.Screen, {\n          name: \"Video\",\n          component: Video\n        }), _jsx(Stack.Screen, {\n          name: \"About\",\n          component: AboutUs\n        })]\n      })\n    });\n  }\n\n  function FrontScr(_ref2) {\n    var route = _ref2.route;\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref3) {\n        var route = _ref3.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref4) {\n            var focused = _ref4.focused,\n                color = _ref4.color,\n                size = _ref4.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Notificaton\") {\n              iconName = focused ? \"ios-notifications\" : \"ios-notifications-outline\";\n            } else if (route.name === \"Chat\") {\n              iconName = focused ? \"ios-chatbox-ellipses\" : \"ios-chatbox-ellipses-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: 35,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Home\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Notificaton\",\n        component: Notification,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Chat\",\n        component: Chat,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: Profile,\n        options: {\n          headerShown: false\n        }\n      })]\n    });\n  }\n\n  function HelperProfile() {\n    return _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Helper Profile\",\n        component: Helper_Profile\n      }), _jsx(Stack.Screen, {\n        name: \"Change Password\",\n        component: ChangePassword\n      }), _jsx(Stack.Screen, {\n        name: \"Forgot Password\",\n        component: ForgotPassword\n      }), _jsx(Stack.Screen, {\n        name: \"Payment\",\n        component: Payment\n      }), _jsx(Stack.Screen, {\n        name: \"About us\",\n        component: AboutUs\n      }), _jsx(Stack.Screen, {\n        name: \"Term Condition\",\n        component: TermCondition\n      }), _jsx(Stack.Screen, {\n        name: \"Video Guid\",\n        component: Video\n      }), _jsx(Stack.Screen, {\n        name: \"Helper Edit\",\n        component: HelperProfileEdit\n      })]\n    });\n  }\n\n  function HelperHome() {\n    return _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HelperHomeScreen\n      })\n    });\n  }\n\n  function HelperMap() {\n    return _jsx(Stack.Navigator, {\n      children: _jsx(Stack.Screen, {\n        name: \"Mapi\",\n        component: HelperMapScreen,\n        options: {\n          headerShown: false\n        }\n      })\n    });\n  }\n\n  function HelperFront(_ref5) {\n    var route = _ref5.route;\n    return _jsxs(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref6) {\n        var route = _ref6.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref7) {\n            var focused = _ref7.focused,\n                color = _ref7.color,\n                size = _ref7.size;\n            var iconName;\n\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Helper Home\") {\n              iconName = focused ? \"ios-heart\" : \"ios-heart-outline\";\n            } else if (route.name === \"Map\") {\n              iconName = focused ? \"ios-locate\" : \"ios-locate-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n\n            return _jsx(Ionicons, {\n              name: iconName,\n              size: 35,\n              color: color\n            });\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\"\n        };\n      },\n      children: [_jsx(Tab.Screen, {\n        name: \"Helper Home\",\n        component: HelperHome,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Map\",\n        component: HelperMap\n      }), _jsx(Tab.Screen, {\n        name: \"Profile\",\n        component: HelperProfile,\n        options: {\n          headerShown: false\n        }\n      })]\n    });\n  }\n\n  return _jsxs(NavigationContainer, {\n    children: [_jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        component: LoginScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        component: SignupScreen,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Nearbye Helpers\",\n        component: HelperListNearbye,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Map Screen\",\n        component: MapScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Settingprof\",\n        component: Settingprof\n      }), _jsx(Stack.Screen, {\n        name: \"FrontScr\",\n        component: FrontScr,\n        options: {\n          headerShown: false\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"FrontScreen\",\n        component: FrontScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Forgot Password\",\n        component: ForgotPassword\n      }), _jsx(Stack.Screen, {\n        name: \"HelperFront\",\n        component: HelperFront,\n        options: {\n          headerShown: false\n        }\n      })]\n    }), _jsx(FlashMessage, {\n      position: \"top\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/App.js"],"names":["HomeScreen","NavigationContainer","createNativeStackNavigator","FrontScreen","Ionicons","createBottomTabNavigator","Settingprof","Payment","useState","ChangePassword","ForgotPassword","AsyncStorage","useEffect","Reducer","MapScreen","MapDirection","FlashMessage","HelperListNearbye","ChatScreen","HelperChat","Pay","Helper_Profile","HelperHomeScreen","SearchScreen","FeedBack","LoginScreen","SignupScreen","PictureView","ProfileEdit","TermCondition","Video","AboutUs","Notifications","NotiData","NotiDetail","HelperProfileEdit","HelperMapScreen","HelperMapView","Stack","LogBox","ignoreLogs","App","Tab","val","setVal","Home","headerShown","Notification","Chat","Profile","route","FrontScr","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","HelperProfile","HelperHome","HelperMap","HelperFront","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View,LogBox } from \"react-native\";\nimport { HomeScreen } from \"./Components/FirstHomeScreen/HomeScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { FrontScreen } from \"./Components/HomeScreen/FrontScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { Settingprof } from \"./Components/ProfileScreens/Settingprof\";\nimport { Payment } from \"./Components/ProfileScreens/Payment\";\nimport { useState } from \"react\";\nimport { ChangePassword } from \"./Components/ProfileScreens/ChangePassword\";\nimport { ForgotPassword } from \"./Components/ProfileScreens/ForgotPassword\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useEffect } from \"react\";\nimport { Reducer } from \"react\";\nimport { MapScreen } from \"./Components/Mapsource/MapScreen\";\nimport { MapDirection } from \"./Components/Mapsource/MapDirection\";\nimport FlashMessage from \"react-native-flash-message\";\nimport { HelperListNearbye } from \"./Components/HomeScreen/HelperListNearbye\";\nimport { ChatScreen } from \"./Components/ChatScreen/ChatScreen\";\nimport { HelperChat } from \"./Components/ChatScreen/HelperChat\";\nimport Pay from \"./Components/Pay\";\nimport { Helper_Profile } from \"./Components/ProfileScreens/Helper_Profile\";\nimport { HelperHomeScreen } from \"./Components/HelperScr/HelperHomeScreen/HelperHomeScreen\";\nimport { SearchScreen } from \"./Components/HomeScreen/SearchScreen\";\n\nimport { FeedBack } from \"./Components/HomeScreen/FeedBack\";\nimport LoginScreen from \"./Components/LoginScreen/LoginScreen\";\nimport SignupScreen from \"./Components/SignupScreen/SignupScreen\";\nimport PictureView from \"./Components/ProfileScreens/PictureView\";\nimport ProfileEdit from \"./Components/ProfileScreens/ProfileEdit\";\n\nimport TermCondition from \"./Components/ProfileScreens/TermCondition\";\nimport Video from \"./Components/ProfileScreens/Video\";\nimport AboutUs from \"./Components/SignupScreen/AboutUs\";\nimport { Notifications } from \"./Components/Notification/Notifications\";\nimport { NotiData } from \"./Style/NotiDtata\";\nimport NotiDetail from \"./Components/Notification/NotiDetail\";\nimport HelperProfileEdit from \"./Components/ProfileScreens/HelperProfileEdit\";\nimport HelperMapScreen from \"./Components/HelperScr/HelperMapScreen/HelperMapScreen\";\nimport { HelperMapView } from \"./Components/HelperScr/HelperMapScreen/HelperMapView\";\n\n\n\nconst Stack = createNativeStackNavigator();\nLogBox.ignoreLogs(['AsyncStorage has been extracted from react-native core']);\nexport default function App() {\n\n  \n  const Tab = createBottomTabNavigator();\n  const [val, setVal] = useState();\n \n  // let userToken;\n  // userToken = null;\n  // useEffect(async () => {\n  //   try {\n  //     userToken = await AsyncStorage.getItem('xyz')\n  //     console.log(\"hello its App\",userToken);\n  //   }\n  //   catch (e) {\n  //     console.log(e);\n  //   }\n  // })\n  \n  \n  \n  \n  function Home() {\n    return (\n      // <FrontScreen />\n      <Stack.Navigator>\n        <Stack.Group>\n        <Stack.Screen name=\"FrontScreen\" component={FrontScreen} options={{ headerShown: false }}/>\n          <Stack.Screen name=\"Map Screen\" component={MapScreen} />\n          <Stack.Screen name=\"Helpers\" component={HelperListNearbye} />\n          <Stack.Screen name=\"Chat\" component={ChatScreen} />\n          <Stack.Screen name=\"Search\" component={SearchScreen} options={{ headerShown: false }} />\n          <Stack.Screen name=\"Feed Back\" component={FeedBack} options={{ headerShown: false }} />\n          <Stack.Screen name=\"pay\" component={Pay} options={{ headerShown: false }}/>\n          </Stack.Group>\n      </Stack.Navigator>\n    \n    );\n  }\n\n  function Notification() {\n\n    return (\n      <Stack.Navigator>\n          <Stack.Screen name=\"Notifications\" component={Notifications}   />\n          <Stack.Screen name=\"Detail\" component={NotiDetail}   />\n          \n        </Stack.Navigator>\n    );\n  }\n  function Chat() {\n    return (\n    \n      <Stack.Navigator>\n          <Stack.Screen name=\"Halper Chat\" component={HelperChat}   />\n          <Stack.Screen name=\"Chat \" component={ChatScreen}  />\n          \n        </Stack.Navigator>\n    );\n  }\n \n \n  function Profile ({route}) {\n    \n    return (\n     \n      <Stack.Navigator >\n        <Stack.Group>\n          <Stack.Screen name=\"Profil\" component={Settingprof}/>\n          <Stack.Screen name=\"Payment\" component={Payment} />\n         <Stack.Screen name=\"Change Password\" component={ChangePassword} />\n          <Stack.Screen name=\"Forgot Password\" component={ForgotPassword} />\n \n          <Stack.Screen name=\"Edite\" component={ProfileEdit} />\n          <Stack.Screen name=\"PictureView\" component={PictureView} />\n          <Stack.Screen name=\"Term and Condition\" component={TermCondition}   />\n          <Stack.Screen name=\"Video\" component={Video} />\n          <Stack.Screen name=\"About\" component={AboutUs} />\n          </Stack.Group>\n        </Stack.Navigator>\n    );\n\n    \n  }\n  function FrontScr({route}) {\n  \n    \n    return (\n      \n    <Tab.Navigator  \n   // screenOptions={{  gesturesEnabled: false,route}}  \n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Notificaton\") {\n              iconName = focused ? \"ios-notifications\" : \"ios-notifications-outline\";\n            } else if (route.name === \"Chat\") {\n              iconName = focused\n                ? \"ios-chatbox-ellipses\"\n                : \"ios-chatbox-ellipses-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={35} color={color} />;\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n     \n        <Tab.Screen name=\"Home\" component={Home} options={{ headerShown: false}}/> \n        <Tab.Screen name=\"Notificaton\" component={Notification} options={{ headerShown: false }}/>\n        <Tab.Screen name=\"Chat\" component={Chat}  options={{ headerShown: false }} />\n        <Tab.Screen name=\"Profile\" component={Profile} options={{ headerShown: false }} />\n      </Tab.Navigator>\n       \n    );\n  }\n  function HelperProfile() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"Helper Profile\" component={Helper_Profile} />\n        <Stack.Screen name=\"Change Password\" component={ChangePassword} />\n        <Stack.Screen name=\"Forgot Password\" component={ForgotPassword} />\n        <Stack.Screen name=\"Payment\" component={Payment} />\n        <Stack.Screen name=\"About us\" component={AboutUs} />\n        <Stack.Screen name=\"Term Condition\" component={TermCondition} />\n        <Stack.Screen name=\"Video Guid\" component={Video} />\n        <Stack.Screen name=\"Helper Edit\" component={HelperProfileEdit} />\n        </Stack.Navigator>\n    )\n  }\n  function HelperHome() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"Home\" component={HelperHomeScreen} />\n        </Stack.Navigator>\n    )\n  }\n  function HelperMap() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"Mapi\" component={HelperMapScreen} options={{ headerShown: false}}/>\n        </Stack.Navigator>\n    )\n  }\n  function HelperFront({route}) {\n  \n    \n    return (\n      \n    <Tab.Navigator  \n  //  screenOptions={{  gesturesEnabled: false,route}}  \n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n            if (route.name === \"Home\") {\n              iconName = focused ? \"ios-home\" : \"ios-home-outline\";\n            } else if (route.name === \"Helper Home\") {\n              iconName = focused ? \"ios-heart\" : \"ios-heart-outline\";\n            } else if (route.name === \"Map\") {\n              iconName = focused\n                ? \"ios-locate\"\n                : \"ios-locate-outline\";\n            } else if (route.name === \"Profile\") {\n              iconName = focused ? \"ios-person\" : \"ios-person-outline\";\n            }\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={35} color={color} />;\n          },\n          tabBarActiveTintColor: \"#1976d2\",\n          tabBarInactiveTintColor: \"gray\",\n        })}\n      >\n     \n        <Tab.Screen name=\"Helper Home\" component={HelperHome} options={{ headerShown: false}}/> \n        <Tab.Screen name=\"Map\" component={HelperMap}/>\n        {/* <Tab.Screen name=\"Chat\" component={HelperChatt}  options={{ headerShown: false }} /> */}\n        <Tab.Screen name=\"Profile\" component={HelperProfile} options={{ headerShown: false }} />\n      </Tab.Navigator>\n       \n    );\n  }\n  return (\n    // <RealHomePage />\n    //  <BoxHelper />\n    // <HelperView/>\n    \n    <NavigationContainer>\n      <Stack.Navigator >\n      {/* <Stack.Screen name=\"Chat\" component={ChatScreen}/> */}\n       \n      {/* <Stack.Screen name=\"Mapi\" component={HelperMapScreen} /> */}\n      {/* <Stack.Screen name=\"Feed Back\" component={FeedBack} options={{ headerShown: false }} /> */}\n        {/* <Stack.Screen name=\"SettingCompDesign\" component={SettingCompDesign} /> */}\n       \n        <Stack.Screen name=\"Home\" component={HomeScreen} options={{ headerShown: false }} />\n        {/* <Stack.Screen name=\"Login\" component={Login} options={{ headerShown: false }} /> */}\n        <Stack.Screen name=\"Login\" component={LoginScreen} options={{ headerShown: false }} />\n        {/* <Stack.Screen name=\"SignUp\" component={SignUp} /> */}\n        <Stack.Screen name=\"Signup\" component={SignupScreen}  options={{ headerShown: false }}/>\n        <Stack.Screen name=\"Nearbye Helpers\" component={HelperListNearbye} options={{ headerShown: false }} />\n  \n        <Stack.Screen name=\"Map Screen\" component={MapScreen} />\n     \n          <Stack.Screen name=\"Settingprof\" component={Settingprof} />\n     \n        <Stack.Screen name=\"FrontScr\" component={FrontScr} options={{ headerShown: false }} />\n        <Stack.Screen name=\"FrontScreen\" component={FrontScreen} />\n       \n        <Stack.Screen name=\"Forgot Password\" component={ForgotPassword}/>\n        <Stack.Screen name=\"HelperFront\" component={HelperFront} options={{ headerShown: false }}/>\n      </Stack.Navigator>\n      <FlashMessage position=\"top\" /> \n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { Rating, AirbnbRating } from \"react-native-ratings\";\nimport { firebase } from \"../firebaseConfig/Config\";\nimport * as Location from \"expo-location\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar coloure = \"#fff\";\n\nvar ratingCompleted = function ratingCompleted(rating) {\n  console.log(\"Rating is: \" + rating);\n};\n\nvar wait = function wait(timeout) {\n  return new Promise(function (resolve) {\n    return setTimeout(resolve, timeout);\n  });\n};\n\nexport var HelperListNearbye = function HelperListNearbye(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      locationServiceEnabled = _useState2[0],\n      setLocationServiceEnabled = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _route$params = route.params,\n      name = _route$params.name,\n      lat = _route$params.lat,\n      lng = _route$params.lng;\n  console.log(\"tttttttttttttttt\", name, lat, lng);\n  var DATA = [];\n  useEffect(function () {\n    CheckIfLocationEnabled();\n    helperData();\n  });\n\n  if (loading) {\n    return _jsx(View, {\n      style: {\n        justifyContent: \"center\",\n        flex: 1\n      },\n      children: _jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"blue\"\n      })\n    });\n  }\n\n  var onRefresh = React.useCallback(function () {\n    console.log(DATA, 'refresg bab');\n    wait(2000).then(function () {\n      return setRefreshing(false);\n    });\n  }, []);\n\n  var openSetting = function openSetting() {\n    if (Platform.OS == \"ios\") {\n      Linking.openURL(\"App-Prefs:Privacy&path=LOCATION\");\n    } else {\n      IntentLauncherAndroid.startActivityAsync(IntentLauncherAndroid.ACTION_LOCATION_SOURCE_SETTINGS);\n    }\n  };\n\n  var CheckIfLocationEnabled = function CheckIfLocationEnabled() {\n    var enabled;\n    return _regeneratorRuntime.async(function CheckIfLocationEnabled$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Location.hasServicesEnabledAsync());\n\n          case 2:\n            enabled = _context.sent;\n\n            if (!enabled) {\n              Alert.alert(\"Location Service not enabled\", \"Please enable your location services to continue\", [{\n                text: \"OK\",\n                onPress: function onPress() {\n                  return openSetting();\n                }\n              }, {\n                text: \"Cancel\"\n              }], {\n                cancelable: false\n              });\n            } else {\n              setLocationServiceEnabled(enabled);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var helperData = function helperData() {\n    firebase.firestore().collection(\"Helpers\").get().then(function (querySnapshot) {\n      querySnapshot.forEach(function (documentSnapshot) {\n        if (documentSnapshot.data().skills == name) {\n          var getting = calculateDistance(documentSnapshot.data().lat, documentSnapshot.data().long, Number(lat), Number(lng));\n\n          if (getting <= 10) {\n            DATA.push({\n              id: documentSnapshot.data().id,\n              helperfullName: documentSnapshot.data().fullName,\n              skills: documentSnapshot.data().skills,\n              lati: documentSnapshot.data().lat,\n              Long: documentSnapshot.data().long,\n              get: getting,\n              photo: \"https://randomuser.me/api/portraits/men/97.jpg\"\n            });\n          }\n        }\n      });\n      console.log(\"ss\", DATA);\n    });\n  };\n\n  var calculateDistance = function calculateDistance(latt1, lng11, lat22, lng22) {\n    var toRadian = function toRadian(n) {\n      return n * Math.PI / 180;\n    };\n\n    var lat2 = latt1;\n    var lon2 = lng11;\n    var lat1 = lat22;\n    var lon1 = lng22;\n    console.log(lat1, lon1 + \"===\" + lat2, lon2);\n    var R = 8371;\n    var x1 = lat2 - lat1;\n    var dLat = toRadian(x1);\n    var x2 = lon2 - lon1;\n    var dLon = toRadian(x2);\n    var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(toRadian(lat1)) * Math.cos(toRadian(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = R * c;\n    console.log(\"distance==?\", d);\n    return d.toFixed(1);\n  };\n\n  var Item = function Item(_ref2) {\n    var item = _ref2.item,\n        onPress = _ref2.onPress,\n        backgroundColor = _ref2.backgroundColor,\n        textColor = _ref2.textColor;\n    return _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        setLoading(true);\n      },\n      style: [styles.item, backgroundColor],\n      children: [_jsx(Image, {\n        source: {\n          uri: item.photo\n        },\n        style: {\n          width: 60,\n          height: 60,\n          borderRadius: 30\n        }\n      }), _jsxs(View, {\n        style: {\n          justifyContent: \"space-evenly\",\n          paddingLeft: 15\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: item.helperfullName\n        }), _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(Text, {\n            style: styles.title2,\n            children: item.skills\n          }), _jsxs(Text, {\n            style: {\n              position: \"absolute\",\n              fontSize: 18,\n              fontWeight: \"bold\",\n              color: \"green\",\n              marginLeft: 185\n            },\n            children: [item.get, \" km\"]\n          })]\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(Rating, {\n            onFinishRating: ratingCompleted,\n            style: {\n              alignSelf: \"flex-start\"\n            },\n            imageSize: 18,\n            type: \"custom\",\n            tintColor: coloure,\n            ratingCount: 5\n          })\n        })]\n      })]\n    });\n  };\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedId = _useState6[0],\n      setSelectedId = _useState6[1];\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item,\n        colour = _ref3.colour;\n    var backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\n    var color = item.id === selectedId ? \"white\" : \"black\";\n    return _jsx(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      }\n    });\n  };\n\n  var ListEmptyView = function ListEmptyView() {\n    return _jsx(View, {\n      style: styles.headerText,\n      children: _jsxs(Text, {\n        style: {\n          textAlign: \"center\",\n          fontSize: 18\n        },\n        children: [\" \", \"Scroll down...\"]\n      })\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: DATA,\n      renderItem: renderItem,\n      ListEmptyComponent: ListEmptyView,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      extraData: selectedId,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh\n      })\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e0e0e0\"\n  },\n  item: {\n    padding: 15,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    borderRadius: 20,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\"\n  },\n  title2: {\n    fontSize: 12,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/HomeScreen/HelperListNearbye.js"],"names":["React","useEffect","useState","Rating","AirbnbRating","firebase","Location","coloure","ratingCompleted","rating","console","log","wait","timeout","Promise","resolve","setTimeout","HelperListNearbye","navigation","route","refreshing","setRefreshing","locationServiceEnabled","setLocationServiceEnabled","loading","setLoading","params","name","lat","lng","DATA","CheckIfLocationEnabled","helperData","justifyContent","flex","onRefresh","useCallback","then","openSetting","Platform","OS","Linking","openURL","IntentLauncherAndroid","startActivityAsync","ACTION_LOCATION_SOURCE_SETTINGS","hasServicesEnabledAsync","enabled","Alert","alert","text","onPress","cancelable","firestore","collection","get","querySnapshot","forEach","documentSnapshot","data","skills","getting","calculateDistance","long","Number","push","id","helperfullName","fullName","lati","Long","photo","latt1","lng11","lat22","lng22","toRadian","n","Math","PI","lat2","lon2","lat1","lon1","R","x1","dLat","x2","dLon","a","sin","cos","c","atan2","sqrt","d","toFixed","Item","item","backgroundColor","textColor","styles","uri","width","height","borderRadius","paddingLeft","title","flexDirection","title2","position","fontSize","fontWeight","color","marginLeft","alignSelf","selectedId","setSelectedId","renderItem","colour","ListEmptyView","headerText","textAlign","container","StyleSheet","create","padding","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  FlatList,\r\n  SafeAreaView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Image,\r\n  View,\r\n  Platform,\r\n  RefreshControl,\r\n  Alert,\r\n  Linking,ActivityIndicator\r\n} from \"react-native\";\r\n//import { DATA } from \"../../Style/DATA\";\r\nimport { Rating, AirbnbRating } from \"react-native-ratings\";\r\nimport { firebase } from \"../firebaseConfig/Config\";\r\nimport * as Location from \"expo-location\";\r\n\r\nlet coloure = \"#fff\";\r\nconst ratingCompleted = (rating) => {\r\n  console.log(\"Rating is: \" + rating);\r\n};\r\nconst wait = (timeout) => {\r\n  return new Promise((resolve) => setTimeout(resolve, timeout));\r\n};\r\nexport const HelperListNearbye = ({ navigation, route }) => {\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n  const [locationServiceEnabled, setLocationServiceEnabled] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const { name, lat, lng } = route.params;\r\n  console.log(\"tttttttttttttttt\", name, lat, lng);\r\n  // const [lat1, setLat1] = useState(32.4756884);\r\n  // const [lng1, setLng1] = useState(74.500916);\r\n  \r\n  \r\n  const DATA = [];\r\n  useEffect(() => {\r\n  \r\n    CheckIfLocationEnabled();\r\n    helperData();\r\n   \r\n  \r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <View style={{ justifyContent: \"center\", flex: 1 }}>\r\n        <ActivityIndicator size=\"large\" color=\"blue\" />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  const onRefresh = React.useCallback(() => {\r\n    console.log(DATA,'refresg bab')\r\n    wait(2000).then(() => setRefreshing(false));\r\n  }, []);\r\n  const openSetting = () => {\r\n    if (Platform.OS == \"ios\") {\r\n      Linking.openURL(\"App-Prefs:Privacy&path=LOCATION\");\r\n    } else {\r\n      IntentLauncherAndroid.startActivityAsync(\r\n        IntentLauncherAndroid.ACTION_LOCATION_SOURCE_SETTINGS\r\n      );\r\n    }\r\n  };\r\n\r\n  const CheckIfLocationEnabled = async () => {\r\n    let enabled = await Location.hasServicesEnabledAsync();\r\n\r\n    if (!enabled) {\r\n      Alert.alert(\r\n        \"Location Service not enabled\",\r\n        \"Please enable your location services to continue\",\r\n        [\r\n          {\r\n            text: \"OK\",\r\n            onPress: () => openSetting(),\r\n          },\r\n          { text: \"Cancel\" },\r\n        ],\r\n\r\n        { cancelable: false }\r\n      );\r\n    } else {\r\n      setLocationServiceEnabled(enabled);\r\n    }\r\n  };\r\n\r\n \r\n\r\n  \r\n  const helperData = () => {\r\n  \r\n    firebase\r\n    .firestore()\r\n    .collection(\"Helpers\")\r\n    .get()\r\n    .then((querySnapshot) => {\r\n\r\n      querySnapshot.forEach((documentSnapshot) => {\r\n        if (documentSnapshot.data().skills == name) {\r\n         let getting = calculateDistance(\r\n            documentSnapshot.data().lat,\r\n            documentSnapshot.data().long,\r\n            Number(lat), \r\n            Number(lng)\r\n          );\r\n        \r\n          if (getting <= 10) {\r\n            DATA.push({\r\n              id: documentSnapshot.data().id,\r\n              helperfullName: documentSnapshot.data().fullName,\r\n              skills: documentSnapshot.data().skills,\r\n              lati: documentSnapshot.data().lat,\r\n              Long: documentSnapshot.data().long,\r\n              get: getting,\r\n              photo: \"https://randomuser.me/api/portraits/men/97.jpg\",\r\n            });\r\n          \r\n          }\r\n        }\r\n      });\r\n\r\n      console.log(\"ss\", DATA);\r\n   \r\n    });\r\n   \r\n}\r\n  const calculateDistance = (latt1, lng11, lat22, lng22) => {\r\n    const toRadian = (n) => (n * Math.PI) / 180;\r\n\r\n    let lat2 = latt1;\r\n    let lon2 = lng11;\r\n    let lat1 = lat22;\r\n    let lon1 = lng22;\r\n\r\n    console.log(lat1, lon1 + \"===\" + lat2, lon2);\r\n    let R = 8371; // km\r\n    let x1 = lat2 - lat1;\r\n    let dLat = toRadian(x1);\r\n    let x2 = lon2 - lon1;\r\n    let dLon = toRadian(x2);\r\n    let a =\r\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\r\n      Math.cos(toRadian(lat1)) *\r\n        Math.cos(toRadian(lat2)) *\r\n        Math.sin(dLon / 2) *\r\n        Math.sin(dLon / 2);\r\n    let c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    let d = R * c;\r\n    console.log(\"distance==?\", d);\r\n\r\n    // if (d < 10) {\r\n    //   setCondition(true)\r\n    // }\r\n    return d.toFixed(1);\r\n  };\r\n  \r\n\r\n  const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n    \r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        setLoading(true);\r\n        // setTimeout(() => {\r\n          \r\n        //   navigation.navigate(\"Map Screen\", {\r\n        //     id: item.id,\r\n        //     latis: item.lati,\r\n        //     longis: item.Long,\r\n        //     dis: item.get,\r\n        //     lat2: lat,\r\n        //     lng2:lng\r\n        //   })\r\n         \r\n        // }, 3000);\r\n      }\r\n\r\n\r\n\r\n\r\n        \r\n      }\r\n      style={[styles.item, backgroundColor]}\r\n    >\r\n      <Image\r\n        source={{ uri: item.photo }}\r\n        style={{ width: 60, height: 60, borderRadius: 30 }}\r\n      />\r\n\r\n      <View style={{ justifyContent: \"space-evenly\", paddingLeft: 15 }}>\r\n        <Text style={styles.title}>{item.helperfullName}</Text>\r\n\r\n        <View style={{ flexDirection: \"row\" }}>\r\n          <Text style={styles.title2}>{item.skills}</Text>\r\n          <Text\r\n            style={{\r\n              position: \"absolute\",\r\n              fontSize: 18,\r\n              fontWeight: \"bold\",\r\n              color: \"green\",\r\n              marginLeft: 185,\r\n            }}\r\n          >\r\n            {item.get} km\r\n          </Text>\r\n        </View>\r\n        <View pointerEvents=\"none\">\r\n        <Rating\r\n          onFinishRating={ratingCompleted}\r\n          style={{ alignSelf: \"flex-start\" }}\r\n          imageSize={18}\r\n          type=\"custom\"\r\n            tintColor={coloure}\r\n            ratingCount={5}\r\n          />\r\n          </View>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const renderItem = ({ item, colour }) => {\r\n\r\n    const backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\r\n    const color = item.id === selectedId ? \"white\" : \"black\";\r\n    // coloure = item.id == selectedId ? \"#039be5\" : \"#ffFf\";\r\n   \r\n    return (\r\n      <Item\r\n        item={item}\r\n        onPress={() => setSelectedId(item.id)}\r\n        backgroundColor={{ backgroundColor }}\r\n        textColor={{ color }}\r\n      />\r\n    );\r\n  };\r\n  const ListEmptyView = () => {\r\n    return (\r\n      <View style={styles.headerText}>\r\n        <Text style={{ textAlign: \"center\", fontSize: 18 }}>\r\n          {\" \"}\r\n          Scroll down...\r\n        </Text>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      \r\n      <FlatList\r\n        data={DATA}\r\n        renderItem={renderItem}\r\n        ListEmptyComponent={ListEmptyView}\r\n        keyExtractor={(item) => item.id}\r\n        extraData={selectedId}\r\n        refreshControl={\r\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\r\n        }\r\n        />\r\n        \r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#e0e0e0\",\r\n    //  marginTop: StatusBar.currentHeight || 0,\r\n  },\r\n  item: {\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    borderRadius: 20,\r\n    flexDirection: \"row\",\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n  },\r\n  title2: {\r\n    fontSize: 12,\r\n    fontWeight: \"bold\",\r\n  },\r\n \r\n});\r\n"]},"metadata":{},"sourceType":"module"}
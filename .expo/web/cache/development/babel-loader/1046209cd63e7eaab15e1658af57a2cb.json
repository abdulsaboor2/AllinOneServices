{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { DATA } from \"../../Style/DATA\";\nimport { Rating, AirbnbRating } from 'react-native-ratings';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar coloure = '';\n\nvar ratingCompleted = function ratingCompleted(rating) {\n  console.log(\"Rating is: \" + rating);\n};\n\nexport var HelperChat = function HelperChat(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var Item = function Item(_ref2) {\n    var item = _ref2.item,\n        onPress = _ref2.onPress,\n        backgroundColor = _ref2.backgroundColor,\n        textColor = _ref2.textColor;\n    return _jsxs(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Chat ');\n      },\n      style: [styles.item, backgroundColor],\n      children: [_jsx(Image, {\n        source: {\n          uri: item.photo\n        },\n        style: {\n          width: 60,\n          height: 60,\n          borderRadius: 30\n        }\n      }), _jsxs(View, {\n        style: {\n          justifyContent: \"space-evenly\",\n          paddingLeft: 15\n        },\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: item.name\n        }), _jsxs(View, {\n          style: {\n            flexDirection: 'row'\n          },\n          children: [_jsx(Text, {\n            style: styles.title2,\n            children: item.Skill\n          }), _jsx(Text, {\n            style: {\n              fontSize: 18,\n              fontWeight: 'bold',\n              color: 'green',\n              marginLeft: 125\n            },\n            children: \"Chat\"\n          })]\n        }), _jsx(Rating, {\n          onFinishRating: ratingCompleted,\n          style: {\n            alignSelf: 'flex-start'\n          },\n          imageSize: 18,\n          type: \"custom\",\n          tintColor: coloure\n        })]\n      })]\n    });\n  };\n\n  var renderItem = function renderItem(_ref3) {\n    var item = _ref3.item;\n    var backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\n    var color = item.id === selectedId ? 'white' : 'black';\n    coloure = item.id == selectedId ? \"#039be5\" : '#ffFf';\n    return _jsx(Item, {\n      item: item,\n      onPress: function onPress() {\n        return setSelectedId(item.id);\n      },\n      backgroundColor: {\n        backgroundColor: backgroundColor\n      },\n      textColor: {\n        color: color\n      }\n    });\n  };\n\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: DATA,\n      renderItem: renderItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      extraData: selectedId\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e0e0e0\"\n  },\n  item: {\n    padding: 15,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    borderRadius: 20,\n    flexDirection: \"row\"\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  title2: {\n    fontSize: 12,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/USER/signupp/Components/ChatScreen/HelperChat.js"],"names":["React","useState","DATA","Rating","AirbnbRating","coloure","ratingCompleted","rating","console","log","HelperChat","navigation","selectedId","setSelectedId","Item","item","onPress","backgroundColor","textColor","navigate","styles","uri","photo","width","height","borderRadius","justifyContent","paddingLeft","title","name","flexDirection","title2","Skill","fontSize","fontWeight","color","marginLeft","alignSelf","renderItem","id","container","StyleSheet","create","flex","padding","marginVertical","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { FlatList, SafeAreaView, StatusBar, StyleSheet, Text, TouchableOpacity,Image,View } from \"react-native\";\r\nimport { DATA } from \"../../Style/DATA\";\r\nimport { Rating, AirbnbRating } from 'react-native-ratings';\r\n\r\nlet coloure=''\r\nconst ratingCompleted=(rating)=>{\r\n  console.log(\"Rating is: \" + rating)\r\n}\r\n  \r\n\r\nexport const HelperChat = ({ navigation }) => {\r\n  \r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const Item = ({ item, onPress, backgroundColor, textColor }) => (\r\n    <TouchableOpacity onPress={()=>navigation.navigate('Chat ')} style={[styles.item, backgroundColor,]}>\r\n    <Image source={{uri:item.photo}}  style={{width:60, height:60,borderRadius:30}} />\r\n    <View style={{justifyContent:\"space-evenly\",paddingLeft:15}}>\r\n              <Text style={styles.title}>{item.name}</Text>\r\n              \r\n          <View style={{ flexDirection:'row' }} >\r\n              <Text style={styles.title2}>{item.Skill}</Text>\r\n              <Text style={{ fontSize: 18,fontWeight:'bold', color: 'green',marginLeft:125}}>Chat</Text>\r\n          </View>\r\n        \r\n        <Rating\r\n            onFinishRating={ratingCompleted}\r\n            style={{alignSelf:'flex-start'}}\r\n            imageSize={18} type='custom' tintColor={coloure}\r\n        />\r\n          </View>\r\n         \r\n    </TouchableOpacity>\r\n  );\r\n\r\n\r\n  const renderItem = ({item}) => {\r\n    const backgroundColor = item.id === selectedId ? \"#039be5\" : \"#ffff\";\r\n    const color = item.id === selectedId ? 'white' : 'black';\r\n   //if (item.id === selectedId) { navigation.navigate('Chat ') }\r\n    coloure =  item.id == selectedId?\"#039be5\":'#ffFf'\r\n     \r\n    return (\r\n      <Item\r\n        item={item}\r\n        onPress={() => setSelectedId(item.id)}\r\n        backgroundColor={{ backgroundColor }}\r\n        textColor={{ color }}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <FlatList\r\n        data={DATA}\r\n        renderItem={renderItem}\r\n        keyExtractor={(item) => item.id}\r\n        extraData={selectedId}\r\n      \r\n      >\r\n        \r\n      </FlatList>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor:\"#e0e0e0\",\r\n  //  marginTop: StatusBar.currentHeight || 0,\r\n    \r\n  },\r\n  item: {\r\n    padding: 15,\r\n    marginVertical: 8,\r\n    marginHorizontal: 16,\r\n    borderRadius:20,\r\n    flexDirection:\"row\",\r\n\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight:'bold'\r\n\r\n  },\r\n  title2: {\r\n    fontSize: 12,\r\n    fontWeight:'bold'\r\n\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}
{"version":3,"sources":["Notification.tsx"],"names":["React","StyleSheet","View","Text","Image","SafeContainer","s","create","container","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","backgroundColor","borderRadius","marginTop","marginHorizontal","paddingVertical","paddingHorizontal","flexDirection","alignItems","image","marginRight","content","flex","title","fontWeight","fontSize","lineHeight","color","description","NotificationComponent","titleStyle","descriptionStyle","imageSource","imageStyle","ContainerComponent","maxTitleLines","maxDescriptionLines","containerStyle","Container"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  Text,\n  ImageSourcePropType,\n  Image,\n  TextStyle,\n  ImageStyle,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\n\nimport SafeContainer from './SafeContainer';\n\nconst s = StyleSheet.create({\n  container: {\n    shadowColor: '#000000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n\n    elevation: 10,\n\n    backgroundColor: '#ffffff',\n    borderRadius: 5,\n    marginTop: 10,\n    marginHorizontal: 10,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  image: {\n    alignItems: 'center',\n    marginRight: 5,\n    borderRadius: 5,\n    height: 45,\n    width: 45,\n  },\n  content: {\n    flex: 1,\n    marginHorizontal: 5,\n  },\n  title: {\n    fontWeight: 'bold',\n    fontSize: 15,\n    lineHeight: 25,\n    color: '#007BFF',\n  },\n  description: {\n    fontSize: 14,\n    lineHeight: 20,\n    color: '#444444',\n  },\n});\n\nexport interface NotificationComponentProps {\n  /** Passed to `<Image />` as `source` param.\n   * @default null */\n  imageSource?: ImageSourcePropType;\n\n  /** The maximum number of lines to use for rendering title.\n   * @default null */\n  maxTitleLines?: number;\n\n  /** The maximum number of lines to use for rendering description.\n   * @default null */\n  maxDescriptionLines?: number;\n\n  /** A container of the component. Set it in case you use different SafeAreaView than the standard\n   * @default SafeAreaView */\n  ContainerComponent?: React.ElementType;\n\n  /** The style to use for rendering title\n   * @default null */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /** The style to use for rendering description\n   * @default null */\n  descriptionStyle?: StyleProp<TextStyle>;\n\n  /** The style to use for notification container.\n   * Might be useful to change background color, shadows, paddings or margins\n   * @default null */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /** The style to use for rendering image\n   * @default null */\n  imageStyle?: StyleProp<ImageStyle>;\n}\n\ninterface NotificationComponentAllProps extends NotificationComponentProps {\n  title?: string;\n  description?: string;\n}\n\nconst NotificationComponent: React.FunctionComponent<NotificationComponentAllProps> = ({\n  title,\n  titleStyle,\n  description,\n  descriptionStyle,\n  imageSource,\n  imageStyle,\n  ContainerComponent,\n  maxTitleLines,\n  maxDescriptionLines,\n  containerStyle,\n}) => {\n  const Container = ContainerComponent ?? SafeContainer;\n  return (\n    <Container>\n      <View style={[s.container, containerStyle]}>\n        {!!imageSource && <Image style={[s.image, imageStyle]} source={imageSource} />}\n        <View style={s.content}>\n          {!!title && (\n            <Text style={[s.title, titleStyle]} numberOfLines={maxTitleLines}>\n              {title}\n            </Text>\n          )}\n          {!!description && (\n            <Text style={[s.description, descriptionStyle]} numberOfLines={maxDescriptionLines}>\n              {description}\n            </Text>\n          )}\n        </View>\n      </View>\n    </Container>\n  );\n};\n\nexport default NotificationComponent;\n"]}
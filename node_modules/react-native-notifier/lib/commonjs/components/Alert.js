"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _reactNative = require("react-native");

var _SafeContainer = _interopRequireDefault(require("./SafeContainer"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const bgColors = {
  error: '#E03737',
  warn: '#FFAC00',
  info: '#007BFF',
  success: '#00B104'
};

const s = _reactNative.StyleSheet.create({
  container: {
    margin: 10
  },
  title: {
    fontWeight: 'bold',
    textAlign: 'center',
    fontSize: 15,
    lineHeight: 22,
    color: 'white'
  },
  description: {
    textAlign: 'center',
    fontSize: 14,
    lineHeight: 22,
    color: 'white'
  }
});

const AlertComponent = ({
  title,
  titleStyle,
  description,
  descriptionStyle,
  alertType = 'success',
  backgroundColor,
  textColor,
  ContainerComponent,
  maxTitleLines,
  maxDescriptionLines
}) => {
  const Container = ContainerComponent !== null && ContainerComponent !== void 0 ? ContainerComponent : _SafeContainer.default;
  const textStyle = textColor ? {
    color: textColor
  } : null;
  return /*#__PURE__*/_react.default.createElement(Container, {
    style: {
      backgroundColor: backgroundColor || bgColors[alertType]
    }
  }, /*#__PURE__*/_react.default.createElement(_reactNative.View, {
    style: s.container
  }, !!title && /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [s.title, textStyle, titleStyle],
    numberOfLines: maxTitleLines
  }, title), !!description && /*#__PURE__*/_react.default.createElement(_reactNative.Text, {
    style: [s.description, textStyle, descriptionStyle],
    numberOfLines: maxDescriptionLines
  }, description)));
};

var _default = AlertComponent;
exports.default = _default;
//# sourceMappingURL=Alert.js.map
{"version":3,"sources":["Alert.tsx"],"names":["bgColors","error","warn","info","success","s","StyleSheet","create","container","margin","title","fontWeight","textAlign","fontSize","lineHeight","color","description","AlertComponent","titleStyle","descriptionStyle","alertType","backgroundColor","textColor","ContainerComponent","maxTitleLines","maxDescriptionLines","Container","SafeContainer","textStyle"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AAIA,MAAMA,QAAoC,GAAG;AAC3CC,EAAAA,KAAK,EAAE,SADoC;AAE3CC,EAAAA,IAAI,EAAE,SAFqC;AAG3CC,EAAAA,IAAI,EAAE,SAHqC;AAI3CC,EAAAA,OAAO,EAAE;AAJkC,CAA7C;;AAOA,MAAMC,CAAC,GAAGC,wBAAWC,MAAX,CAAkB;AAC1BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AADC,GADe;AAI1BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAE,MADP;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,QAAQ,EAAE,EAHL;AAILC,IAAAA,UAAU,EAAE,EAJP;AAKLC,IAAAA,KAAK,EAAE;AALF,GAJmB;AAW1BC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,SAAS,EAAE,QADA;AAEXC,IAAAA,QAAQ,EAAE,EAFC;AAGXC,IAAAA,UAAU,EAAE,EAHD;AAIXC,IAAAA,KAAK,EAAE;AAJI;AAXa,CAAlB,CAAV;;AA0DA,MAAME,cAA+D,GAAG,CAAC;AACvEP,EAAAA,KADuE;AAEvEQ,EAAAA,UAFuE;AAGvEF,EAAAA,WAHuE;AAIvEG,EAAAA,gBAJuE;AAKvEC,EAAAA,SAAS,GAAG,SAL2D;AAMvEC,EAAAA,eANuE;AAOvEC,EAAAA,SAPuE;AAQvEC,EAAAA,kBARuE;AASvEC,EAAAA,aATuE;AAUvEC,EAAAA;AAVuE,CAAD,KAWlE;AACJ,QAAMC,SAAS,GAAGH,kBAAH,aAAGA,kBAAH,cAAGA,kBAAH,GAAyBI,sBAAxC;AACA,QAAMC,SAAS,GAAGN,SAAS,GAAG;AAAEP,IAAAA,KAAK,EAAEO;AAAT,GAAH,GAA0B,IAArD;AACA,sBACE,6BAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAAED,MAAAA,eAAe,EAAEA,eAAe,IAAIrB,QAAQ,CAACoB,SAAD;AAA9C;AAAlB,kBACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEf,CAAC,CAACG;AAAf,KACG,CAAC,CAACE,KAAF,iBACC,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACL,CAAC,CAACK,KAAH,EAAUkB,SAAV,EAAqBV,UAArB,CAAb;AAA+C,IAAA,aAAa,EAAEM;AAA9D,KACGd,KADH,CAFJ,EAMG,CAAC,CAACM,WAAF,iBACC,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CAACX,CAAC,CAACW,WAAH,EAAgBY,SAAhB,EAA2BT,gBAA3B,CADT;AAEE,IAAA,aAAa,EAAEM;AAFjB,KAIGT,WAJH,CAPJ,CADF,CADF;AAmBD,CAjCD;;eAmCeC,c","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, Text, TextStyle, StyleProp } from 'react-native';\n\nimport SafeContainer from './SafeContainer';\n\ntype AlertTypes = 'error' | 'warn' | 'info' | 'success';\n\nconst bgColors: Record<AlertTypes, string> = {\n  error: '#E03737',\n  warn: '#FFAC00',\n  info: '#007BFF',\n  success: '#00B104',\n};\n\nconst s = StyleSheet.create({\n  container: {\n    margin: 10,\n  },\n  title: {\n    fontWeight: 'bold',\n    textAlign: 'center',\n    fontSize: 15,\n    lineHeight: 22,\n    color: 'white',\n  },\n  description: {\n    textAlign: 'center',\n    fontSize: 14,\n    lineHeight: 22,\n    color: 'white',\n  },\n});\n\nexport interface AlertComponentProps {\n  /** Background color will be changed depending on the type. Available values: `error`(red), `success`(green), `warn`(orange) and `info`(blue).\n   * @default 'success' */\n  alertType: AlertTypes;\n\n  /** While the background of the alert depends on `alertType`, you can also set the other color you want.\n   * @default null */\n  backgroundColor?: string;\n\n  /** Color of `title` and `description`.\n   * @default 'white' */\n  textColor?: string;\n\n  /** The maximum number of lines to use for rendering title.\n   * @default null */\n  maxTitleLines?: number;\n\n  /** The maximum number of lines to use for rendering description.\n   * @default null */\n  maxDescriptionLines?: number;\n\n  /** A container of the component. Set it in case you use different SafeAreaView than the standard\n   * @default SafeAreaView */\n  ContainerComponent?: React.ElementType;\n\n  /** The style to use for rendering title\n   * @default null */\n  titleStyle?: StyleProp<TextStyle>;\n\n  /** The style to use for rendering description\n   * @default null */\n  descriptionStyle?: StyleProp<TextStyle>;\n}\n\ninterface AlertComponentAllProps extends AlertComponentProps {\n  title?: string;\n  description?: string;\n}\n\nconst AlertComponent: React.FunctionComponent<AlertComponentAllProps> = ({\n  title,\n  titleStyle,\n  description,\n  descriptionStyle,\n  alertType = 'success',\n  backgroundColor,\n  textColor,\n  ContainerComponent,\n  maxTitleLines,\n  maxDescriptionLines,\n}) => {\n  const Container = ContainerComponent ?? SafeContainer;\n  const textStyle = textColor ? { color: textColor } : null;\n  return (\n    <Container style={{ backgroundColor: backgroundColor || bgColors[alertType] }}>\n      <View style={s.container}>\n        {!!title && (\n          <Text style={[s.title, textStyle, titleStyle]} numberOfLines={maxTitleLines}>\n            {title}\n          </Text>\n        )}\n        {!!description && (\n          <Text\n            style={[s.description, textStyle, descriptionStyle]}\n            numberOfLines={maxDescriptionLines}\n          >\n            {description}\n          </Text>\n        )}\n      </View>\n    </Container>\n  );\n};\n\nexport default AlertComponent;\n"]}
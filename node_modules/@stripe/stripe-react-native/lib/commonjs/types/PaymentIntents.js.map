{"version":3,"sources":["PaymentIntents.ts"],"names":["Status","PaymentIntents"],"mappings":"8KA6CcA,CAAAA,M,WAAAA,M,EAAAA,M,0BAAAA,M,kDAAAA,M,gDAAAA,M,wBAAAA,M,4BAAAA,M,oCAAAA,M,sCAAAA,M,yBAAAA,M,GAAAA,M,uCAxBGC,c,0BAAAA,c","sourcesContent":["import type { Nullable, StripeError } from '.';\nimport type { PaymentMethod } from './PaymentMethods';\n\nexport interface PaymentIntent {\n  id: string;\n  amount: number;\n  created: string;\n  currency: string;\n  status: PaymentIntents.Status;\n  description: Nullable<string>;\n  receiptEmail: Nullable<string>;\n  canceledAt: Nullable<string>;\n  clientSecret: string;\n  livemode: boolean;\n  paymentMethodId: string;\n  captureMethod: 'Automatic' | 'Manual';\n  confirmationMethod: 'Automatic' | 'Manual';\n  lastPaymentError: Nullable<PaymentIntents.LastPaymentError>;\n  shipping: Nullable<PaymentIntents.ShippingDetails>;\n}\n\nexport namespace PaymentIntents {\n  export type LastPaymentError = StripeError<string> & {\n    paymentMethod: PaymentMethod;\n  };\n\n  export interface Address {\n    city: string;\n    county: string;\n    line1: string;\n    line2: string;\n    postalCode: string;\n    state: string;\n  }\n\n  export type FutureUsage = 'OffSession' | 'OnSession';\n\n  export interface ShippingDetails {\n    address: Address;\n    name: string;\n    carrier: string;\n    phone: string;\n    trackingNumber: string;\n  }\n\n  export enum Status {\n    Succeeded = 'Succeeded',\n    RequiresPaymentMethod = 'RequiresPaymentMethod',\n    RequiresConfirmation = 'RequiresConfirmation',\n    Canceled = 'Canceled',\n    Processing = 'Processing',\n    RequiresAction = 'RequiresAction',\n    RequiresCapture = 'RequiresCapture',\n    Unknown = 'Unknown',\n  }\n}\n"]}
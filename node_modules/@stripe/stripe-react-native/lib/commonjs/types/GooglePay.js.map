{"version":3,"sources":["GooglePay.ts"],"names":["GooglePay"],"mappings":"qJAAiBA,S,qBAAAA,S","sourcesContent":["export namespace GooglePay {\n  export type PresentGooglePayParams = PresentGooglePayType & {\n    clientSecret: string;\n  };\n\n  export type PresentGooglePayType =\n    | {\n        /*\n         * Present Google Pay to collect customer payment details and use it to confirm the\n         * [SetupIntent] represented by [clientSecret].\n         */\n        forSetupIntent?: true;\n        /*\n         * The Google Pay API requires a [currencyCode](https://developers.google.com/pay/api/android/reference/request-objects#TransactionInfo).\n         * [currencyCode] is required even though the SetupIntent API does not require it.\n         */\n        currencyCode: string;\n      }\n    | {\n        /*\n         * Present Google Pay to collect customer payment details and use it to confirm the\n         * [PaymentIntent] represented by [clientSecret].\n         */\n        forSetupIntent?: false;\n      };\n\n  export interface SetupIntentParams {\n    clientSecret: string;\n  }\n\n  export interface InitParams {\n    testEnv: boolean;\n    merchantName: string;\n    countryCode: string;\n    /**\n     * Billing address collection configuration.\n     */\n    billingAddressConfig?: BillingAddressConfig;\n    /**\n     * Flag to indicate whether Google Pay collect the customer's email address.\n     *\n     * Default to `false`.\n     */\n    isEmailRequired?: boolean;\n    /**\n     * If `true`, Google Pay is considered ready if the customer's Google Pay wallet\n     * has existing payment methods.\n     *\n     * Default to `true`.\n     */\n    existingPaymentMethodRequired?: boolean;\n  }\n\n  export interface BillingAddressConfig {\n    isRequired?: boolean;\n    /**\n     * Billing address format required to complete the transaction.\n     */\n    format?: 'FULL' | 'MIN';\n    /**\n     * Set to true if a phone number is required to process the transaction.\n     */\n    isPhoneNumberRequired?: boolean;\n  }\n\n  export interface CreatePaymentMethodParams {\n    /*\n     * ISO 4217 alphabetic currency code. (e.g. \"USD\", \"EUR\")\n     */\n    currencyCode: string;\n    /*\n     * Amount intended to be collected. A positive integer representing how much to\n     * charge in the smallest currency unit (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100,\n     * a zero-decimal currency).\n     */\n    amount: number;\n  }\n}\n"]}
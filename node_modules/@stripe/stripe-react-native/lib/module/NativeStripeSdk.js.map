{"version":3,"sources":["NativeStripeSdk.tsx"],"names":["StripeSdk","NativeModules"],"mappings":"gFAAA,yCA8EA,GAAQA,CAAAA,SAAR,CAAsBC,0BAAtB,CAAQD,SAAR,C,aAEeA,S","sourcesContent":["import { NativeModules } from 'react-native';\nimport type {\n  PaymentMethodCreateParams,\n  ApplePay,\n  PaymentSheet,\n  ConfirmSetupIntent,\n  InitialiseParams,\n  CreatePaymentMethodResult,\n  RetrievePaymentIntentResult,\n  RetrieveSetupIntentResult,\n  ConfirmPaymentResult,\n  HandleCardActionResult,\n  ConfirmSetupIntentResult,\n  CreateTokenForCVCUpdateResult,\n  InitPaymentSheetResult,\n  PresentPaymentSheetResult,\n  ConfirmPaymentSheetPaymentResult,\n  Card,\n  ApplePayResult,\n  CreateTokenResult,\n  GooglePayInitResult,\n  PayWithGooglePayResult,\n  CreateGooglePayPaymentMethodResult,\n  GooglePay,\n  OpenApplePaySetupResult,\n} from './types';\n\ntype NativeStripeSdkType = {\n  initialise(params: InitialiseParams): Promise<void>;\n  createPaymentMethod(\n    data: PaymentMethodCreateParams.Params,\n    options: PaymentMethodCreateParams.Options\n  ): Promise<CreatePaymentMethodResult>;\n  handleCardAction(\n    paymentIntentClientSecret: string\n  ): Promise<HandleCardActionResult>;\n  confirmPayment(\n    paymentIntentClientSecret: string,\n    data: PaymentMethodCreateParams.Params,\n    options: PaymentMethodCreateParams.Options\n  ): Promise<ConfirmPaymentResult>;\n  isApplePaySupported(): Promise<boolean>;\n  presentApplePay(params: ApplePay.PresentParams): Promise<ApplePayResult>;\n  confirmApplePayPayment(clientSecret: string): Promise<void>;\n  updateApplePaySummaryItems(\n    summaryItems: ApplePay.CartSummaryItem[],\n    errorAddressFields: Array<{\n      field: ApplePay.AddressFields;\n      message?: string;\n    }>\n  ): Promise<void>;\n  confirmSetupIntent(\n    paymentIntentClientSecret: string,\n    data: ConfirmSetupIntent.Params,\n    options: ConfirmSetupIntent.Options\n  ): Promise<ConfirmSetupIntentResult>;\n  retrievePaymentIntent(\n    clientSecret: string\n  ): Promise<RetrievePaymentIntentResult>;\n  retrieveSetupIntent(clientSecret: string): Promise<RetrieveSetupIntentResult>;\n  initPaymentSheet(\n    params: PaymentSheet.SetupParams\n  ): Promise<InitPaymentSheetResult>;\n  presentPaymentSheet(): Promise<PresentPaymentSheetResult>;\n  confirmPaymentSheetPayment(): Promise<ConfirmPaymentSheetPaymentResult>;\n  createTokenForCVCUpdate(cvc: string): Promise<CreateTokenForCVCUpdateResult>;\n  handleURLCallback(url: string): Promise<boolean>;\n  createToken(params: Card.CreateTokenParams): Promise<CreateTokenResult>;\n  initGooglePay(params: GooglePay.InitParams): Promise<GooglePayInitResult>;\n  presentGooglePay(\n    params: GooglePay.PresentGooglePayParams\n  ): Promise<PayWithGooglePayResult>;\n  createGooglePayPaymentMethod(\n    params: GooglePay.CreatePaymentMethodParams\n  ): Promise<CreateGooglePayPaymentMethodResult>;\n  openApplePaySetup(): Promise<OpenApplePaySetupResult>;\n};\n\nconst { StripeSdk } = NativeModules;\n\nexport default StripeSdk as NativeStripeSdkType;\n"]}
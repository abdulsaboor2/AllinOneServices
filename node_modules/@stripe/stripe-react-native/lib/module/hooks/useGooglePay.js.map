{"version":3,"sources":["useGooglePay.tsx"],"names":["useGooglePay","initGooglePay","presentGooglePay","createGooglePayPaymentMethod","loading","setLoading","_initGooglePay","params","result","_presentGooglePay","_createGooglePayPaymentMethod"],"mappings":"yVAAA,4BAEA,uCAKO,QAASA,CAAAA,YAAT,EAAwB,CAC7B,eACE,2BADF,CAAQC,aAAR,YAAQA,aAAR,CAAuBC,gBAAvB,YAAuBA,gBAAvB,CAAyCC,4BAAzC,YAAyCA,4BAAzC,CAEA,cAA8B,oBAAS,KAAT,CAA9B,qDAAOC,OAAP,eAAgBC,UAAhB,eAEA,GAAMC,CAAAA,cAAc,CAAG,uBACrB,iBAAOC,MAAP,+HACEF,UAAU,CAAC,IAAD,CAAV,CADF,kDAGuBJ,aAAa,CAACM,MAAD,CAHpC,SAGQC,MAHR,eAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,gCAMSG,MANT,uEADqB,CASrB,CAACP,aAAD,CATqB,CAAvB,CAYA,GAAMQ,CAAAA,iBAAiB,CAAG,uBACxB,kBAAOF,MAAP,mIACEF,UAAU,CAAC,IAAD,CAAV,CADF,mDAGuBH,gBAAgB,CAACK,MAAD,CAHvC,SAGQC,MAHR,gBAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,iCAMSG,MANT,wEADwB,CASxB,CAACN,gBAAD,CATwB,CAA1B,CAYA,GAAMQ,CAAAA,6BAA6B,CAAG,uBACpC,kBAAOH,MAAP,mIACEF,UAAU,CAAC,IAAD,CAAV,CADF,mDAGuBF,4BAA4B,CAACI,MAAD,CAHnD,SAGQC,MAHR,gBAIEH,UAAU,CAAC,KAAD,CAAV,CAJF,iCAMSG,MANT,wEADoC,CASpC,CAACL,4BAAD,CAToC,CAAtC,CAYA,MAAO,CACLC,OAAO,CAAPA,OADK,CAELH,aAAa,CAAEK,cAFV,CAGLJ,gBAAgB,CAAEO,iBAHb,CAILN,4BAA4B,CAAEO,6BAJzB,CAAP,CAMD","sourcesContent":["import { useCallback, useState } from 'react';\nimport type { GooglePay } from '../types';\nimport { useStripe } from './useStripe';\n\n/**\n * useGooglePay hook\n */\nexport function useGooglePay() {\n  const { initGooglePay, presentGooglePay, createGooglePayPaymentMethod } =\n    useStripe();\n  const [loading, setLoading] = useState(false);\n\n  const _initGooglePay = useCallback(\n    async (params: GooglePay.InitParams) => {\n      setLoading(true);\n\n      const result = await initGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [initGooglePay]\n  );\n\n  const _presentGooglePay = useCallback(\n    async (params: GooglePay.PresentGooglePayParams) => {\n      setLoading(true);\n\n      const result = await presentGooglePay(params);\n      setLoading(false);\n\n      return result;\n    },\n    [presentGooglePay]\n  );\n\n  const _createGooglePayPaymentMethod = useCallback(\n    async (params: GooglePay.CreatePaymentMethodParams) => {\n      setLoading(true);\n\n      const result = await createGooglePayPaymentMethod(params);\n      setLoading(false);\n\n      return result;\n    },\n    [createGooglePayPaymentMethod]\n  );\n\n  return {\n    loading,\n    initGooglePay: _initGooglePay,\n    presentGooglePay: _presentGooglePay,\n    createGooglePayPaymentMethod: _createGooglePayPaymentMethod,\n  };\n}\n"]}
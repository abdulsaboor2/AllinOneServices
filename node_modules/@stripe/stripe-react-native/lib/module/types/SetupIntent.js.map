{"version":3,"sources":["SetupIntent.ts"],"names":["ConfirmSetupIntent","Status","SetupIntents"],"mappings":"uNAiBiBA,kB,8BAAAA,kB,qFAuDHC,CAAAA,M,WAAAA,M,EAAAA,M,0BAAAA,M,kDAAAA,M,gDAAAA,M,wBAAAA,M,4BAAAA,M,oCAAAA,M,sCAAAA,M,yBAAAA,M,GAAAA,M,qCARGC,Y,wBAAAA,Y","sourcesContent":["import type { Nullable, StripeError } from '.';\nimport type { AuBECSDebitFormComponent } from './components/AuBECSDebitForm';\nimport type { PaymentMethod, PaymentMethods } from './PaymentMethods';\n\nexport interface SetupIntent {\n  id: string;\n  clientSecret: string;\n  lastSetupError: Nullable<ConfirmSetupIntent.LastPaymentError>;\n  created: Nullable<string>;\n  livemode: boolean;\n  paymentMethodId: Nullable<string>;\n  status: SetupIntents.Status;\n  paymentMethodTypes: PaymentMethods.Types[];\n  usage: SetupIntents.FutureUsage;\n  description: Nullable<string>;\n}\n\nexport namespace ConfirmSetupIntent {\n  export type LastPaymentError = StripeError<string> & {\n    paymentMethod: PaymentMethod;\n  };\n\n  export type Params =\n    | CardParams\n    | IdealParams\n    | BancontactParams\n    | SofortParams\n    | AuBecsDebitParams\n    | SepaParams;\n\n  export interface Options {}\n\n  export interface BaseParams {\n    billingDetails?: PaymentMethods.BillingDetails;\n  }\n\n  export interface CardParams extends BaseParams {\n    type: 'Card';\n  }\n\n  export interface IdealParams extends BaseParams {\n    type: 'Ideal';\n    bankName?: string;\n  }\n\n  export interface SofortParams extends BaseParams {\n    type: 'Sofort';\n    country: string;\n  }\n  export interface BancontactParams extends Required<BaseParams> {\n    type: 'Bancontact';\n  }\n\n  export interface SepaParams extends Required<BaseParams> {\n    type: 'SepaDebit';\n    iban: string;\n  }\n\n  export interface AuBecsDebitParams {\n    type: 'AuBecsDebit';\n    formDetails: AuBECSDebitFormComponent.FormDetails;\n  }\n}\n\nexport namespace SetupIntents {\n  export type FutureUsage =\n    | 'Unknown'\n    | 'None'\n    | 'OnSession'\n    | 'OffSession'\n    | 'OneTime';\n\n  export enum Status {\n    Succeeded = 'Succeeded',\n    RequiresPaymentMethod = 'RequiresPaymentMethod',\n    RequiresConfirmation = 'RequiresConfirmation',\n    Canceled = 'Canceled',\n    Processing = 'Processing',\n    RequiresAction = 'RequiresAction',\n    RequiresCapture = 'RequiresCapture',\n    Unknown = 'Unknown',\n  }\n}\n"]}